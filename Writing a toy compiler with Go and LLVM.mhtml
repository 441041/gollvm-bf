From: <Saved by Blink>
Snapshot-Content-Location: https://ketansingh.me/posts/toy-compiler-with-llvm-and-go/?continueFlag=661cc1fd7c69193f55f7496a8fa22c4b
Subject: Writing a toy compiler with Go and LLVM
Date: Tue, 3 Jan 2023 02:35:03 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----"


------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: text/html
Content-ID: <frame-F417A9E8401CAED89782592EC44C7755@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://ketansingh.me/posts/toy-compiler-with-llvm-and-go/?continueFlag=661cc1fd7c69193f55f7496a8fa22c4b

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><meta http-equiv=3D"x-ua-compatible" content=3D"IE=
=3Dedge"><title>Writing a toy compiler with Go and LLVM</title><link rel=3D=
"icon" type=3D"image/png" href=3D"https://ketansingh.me/favicon.ico"><meta =
name=3D"description" content=3D"A place for me to share my thoughts, experi=
ences, and insights on technology relevant to enthusiasts and hackers like =
myself"><meta name=3D"viewport" content=3D"width=3Ddevice-width,initial-sca=
le=3D1"><meta property=3D"og:title" content=3D"Writing a toy compiler with =
Go and LLVM"><meta property=3D"og:description" content=3D"adventures with L=
LVM IR"><meta property=3D"og:type" content=3D"article"><meta property=3D"og=
:url" content=3D"https://ketansingh.me/posts/toy-compiler-with-llvm-and-go/=
"><meta property=3D"article:published_time" content=3D"2022-12-27T22:17:47+=
05:30"><meta property=3D"article:modified_time" content=3D"2022-12-27T22:18=
:39+05:30"><meta name=3D"twitter:card" content=3D"summary"><meta name=3D"tw=
itter:title" content=3D"Writing a toy compiler with Go and LLVM"><meta name=
=3D"twitter:description" content=3D"adventures with LLVM IR"><link href=3D"=
https://fonts.googleapis.com/css?family=3DUbuntu:300,400,300italic,400itali=
c|Raleway:200,300" rel=3D"stylesheet"><link rel=3D"stylesheet" type=3D"text=
/css" media=3D"screen" href=3D"https://ketansingh.me/css/normalize.css"><li=
nk rel=3D"stylesheet" type=3D"text/css" media=3D"screen" href=3D"https://ke=
tansingh.me/css/main.css"><link rel=3D"stylesheet" type=3D"text/css" href=
=3D"https://ketansingh.me/css/dark.css"></head><body><div class=3D"containe=
r wrapper post"><div class=3D"header"><base href=3D"https://ketansingh.me/"=
><h1 class=3D"site-title"><a href=3D"https://ketansingh.me/">Ketan Singh</a=
></h1><div class=3D"site-description"><h2>Collection of musing and rambling=
s</h2><nav class=3D"nav social"><ul class=3D"flat"><a href=3D"https://githu=
b.com/spl0i7" title=3D"Github"><svg xmlns=3D"http://www.w3.org/2000/svg" wi=
dth=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" stroke=3D"curr=
entColor" stroke-width=3D"2" stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und" class=3D"feather feather-github"><path d=3D"M9 19c-5 1.5-5-2.5-7-3m14 =
6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 =
20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27=
.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.=
3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg></a><a href=3D"mailt=
o:a2V0YW5zaW5naC5zaEBnbWFpbC5jb20=3D" title=3D"Mail"><svg xmlns=3D"http://w=
ww.w3.org/2000/svg" width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=3D"roun=
d" stroke-linejoin=3D"round" class=3D"feather feather-mail"><path d=3D"M4 4=
h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></=
path><polyline points=3D"22,6 12,13 2,6"></polyline></svg></a><a href=3D"ht=
tps://www.linkedin.com/in/ketan-singh-sh" title=3D"LinkedIn"><svg xmlns=3D"=
http://www.w3.org/2000/svg" width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" stroke=3D"currentColor" stroke-width=3D"2" stroke-linecap=
=3D"round" stroke-linejoin=3D"round" class=3D"feather feather-linkedin"><pa=
th d=3D"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6=
 0 0 1 6-6z"></path><rect x=3D"2" y=3D"9" width=3D"4" height=3D"12"></rect>=
<circle cx=3D"4" cy=3D"4" r=3D"2"></circle></svg></a></ul></nav></div><nav =
class=3D"nav"><ul class=3D"flat"></ul></nav></div><div class=3D"post-header=
"><h1 class=3D"title">Writing a toy compiler with Go and LLVM</h1><div clas=
s=3D"meta">Posted at =E2=80=94 Dec 27, 2022</div></div><div class=3D"markdo=
wn"><p>Goal of this post is to take a brief look into LLVM infrastructure a=
nd LLVM IR, then use that knowledge to build a toy brainfuck compiler that =
emits IR which can then further be compiled into native executable by LLVM =
tools. You can find the full source code in this <a href=3D"https://github.=
com/spl0i7/gollvm-bf">repository</a></p><h1 id=3D"what-is-llvm">What is LLV=
M?</h1><p>So what even is LLVM? LLVM Project is a compiler framework and co=
llection of tools which can be used to build programming languages. In fact=
, LLVM is not a =E2=80=9Csingle=E2=80=9D project but is composed of multipl=
e subprojects under the same umbrella which includes LLVM Core, Clang, LLDB=
, libc++, etc. By the way LLVM doesn=E2=80=99t stands for anything, it=E2=
=80=99s just LLVM.</p><p>Let=E2=80=99s try to understand what a compiler is=
 before we go into any further topics. Compiler is a program that translate=
s a program from one language to another, most commonly from a high level l=
anguage to native machine language. It can also translate from one high lev=
el language to another, those are sometimes called transpilers.</p><p><img =
src=3D"https://i.imgur.com/eQjSgoG.png" alt=3D"design"></p><p>Typical compi=
ler design includes</p><ul><li><p><strong>Frontend</strong> - This tokenize=
s the code, parses, checks for errors, converts to AST (Abstract Syntax Tre=
e) and optionally intermediate output called IR (intermediate representatio=
n)</p></li><li><p><strong>Optimizer</strong> - This is also called =E2=80=
=9Cmiddle-end=E2=80=9D. It does it=E2=80=99s magic to optimize the code wit=
h techniques such as dead code elimination, branch elimination, loop unroll=
ing, etc.</p></li><li><p><strong>Backend</strong> - This generates the fina=
l output depending on the compilation target (os, architecture, etc)</p></l=
i></ul><p>This design has the advantage that each of these steps can be imp=
lemented independently of each other. For example, we can write different f=
rontends for different programming languages which all output the same inte=
rmediate representation. Optimizer can be designed in such a way that it op=
timizes only IR which is going to be the same for all the languages. Simila=
rly, backend can be designed to operate on IR as input and output code whic=
h is target specific. This way we end up with a really modular design which=
 allows reusing different parts of the compiler for different programming l=
anguages without having to start from scratch for every new compiler.</p><p=
>This is how LLVM is designed as well. Frontend parses the source into LLVM=
 IR, IR is fed through optimizer(s) which is then fed into code generator t=
o generate target output. IR is thus the interface to the LLVM compiler fra=
mework. This property means that all you need to know to write a front end =
for LLVM is IR and LLVM tools can then take over to build the final executa=
ble.</p><h2 id=3D"llvm-ir">LLVM IR</h2><p>LLVM IR is a low-level intermedia=
te representation used by the LLVM compiler framework. LLVM has a static si=
ngle assignment (<a href=3D"https://en.wikipedia.org/wiki/Static_single-ass=
ignment_form">SSA</a>) form. GCC also has IR called GIMPLE, but it is not e=
asy to work with as it=E2=80=99s more tightly coupled to the compiler imple=
mentation. LLVM also has great API(s) available in different programming la=
nguages via libraries which makes it a delight to work with.</p><h3 id=3D"i=
r-structure">IR Structure</h3><p>Let=E2=80=99s take a highly simplified loo=
k into how LLVM IR is structured. In general, it takes the following form</=
p><p><img src=3D"https://i.imgur.com/6cBlRWh.png" alt=3D"alt text"></p><h4 =
id=3D"module">Module</h4><p>Module is the outermost container of the IR. Mo=
dule contains target information, symbols, global variables, function decla=
rations, function definition and other things (not relevant to current disc=
ussion). Most commonly modules are created per source file. Target informat=
ion is just a long string which describes target the for the IR.</p><h4 id=
=3D"function">Function</h4><p>Function contain arguments, entry basic block=
 and one or more basic blocks.</p><h4 id=3D"basic-block">Basic Block</h4><p=
>Basic block contains labels, instructions followed by termination instruct=
ion. Every basic block must end with a terminator. Terminator cannot appear=
 anywhere else other than at the end of a basic block. These tell where the=
 control of execution should go when it reaches the end of basic block. (mo=
st common one is <code>ret</code>)</p><p>Let=E2=80=99s take a look at LLVM =
IR for the following C code snippet which squares and adds two integers</p>=
<div class=3D"highlight"><pre style=3D"color:#586e75;background-color:#eee8=
d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-c" dat=
a-lang=3D"c"><span style=3D"color:#859900;font-weight:700">int</span> <span=
 style=3D"color:#268bd2">square_add</span>(<span style=3D"color:#859900;fon=
t-weight:700">int</span> <span style=3D"color:#268bd2">a</span>, <span styl=
e=3D"color:#859900;font-weight:700">int</span> <span style=3D"color:#268bd2=
">b</span>) {

	<span style=3D"color:#268bd2">a</span> =3D <span style=3D"color:#268bd2">a=
</span> * <span style=3D"color:#268bd2">a</span>;
	<span style=3D"color:#268bd2">b</span> =3D <span style=3D"color:#268bd2">b=
</span> * <span style=3D"color:#268bd2">b</span>;
	<span style=3D"color:#859900">return</span> <span style=3D"color:#268bd2">=
a</span> + <span style=3D"color:#268bd2">b</span>;
=09
}
</code></pre></div><div class=3D"highlight"><pre style=3D"color:#586e75;bac=
kground-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=
=3D"language-llvm" data-lang=3D"llvm"><span style=3D"color:#859900">define<=
/span> <span style=3D"color:#859900">i32</span> <span style=3D"color:#268bd=
2">@square_add</span>(<span style=3D"color:#859900">i32</span> <span style=
=3D"color:#268bd2">%a</span>, <span style=3D"color:#859900">i32</span> <spa=
n style=3D"color:#268bd2">%b</span>) {

<span style=3D"color:#268bd2">entry:</span>

	<span style=3D"color:#268bd2">%a.addr</span> =3D <span style=3D"color:#859=
900">alloca</span> <span style=3D"color:#859900">i32</span>
	<span style=3D"color:#268bd2">%b.addr</span> =3D <span style=3D"color:#859=
900">alloca</span> <span style=3D"color:#859900">i32</span>
=09
	<span style=3D"color:#859900">store</span> <span style=3D"color:#859900">i=
32</span> <span style=3D"color:#268bd2">%a</span>, <span style=3D"color:#85=
9900">i32</span>* <span style=3D"color:#268bd2">%a.addr</span>
	<span style=3D"color:#859900">store</span> <span style=3D"color:#859900">i=
32</span> <span style=3D"color:#268bd2">%b</span>, <span style=3D"color:#85=
9900">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
=09
	<span style=3D"color:#268bd2">%0</span> =3D <span style=3D"color:#859900">=
load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%a.addr</span>
	<span style=3D"color:#268bd2">%1</span> =3D <span style=3D"color:#859900">=
load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%a.addr</span>
=09
	<span style=3D"color:#268bd2">%mul</span> =3D <span style=3D"color:#859900=
">mul</span> <span style=3D"color:#859900">nsw</span> <span style=3D"color:=
#859900">i32</span> <span style=3D"color:#268bd2">%0</span>, <span style=3D=
"color:#268bd2">%1</span>
	<span style=3D"color:#859900">store</span> <span style=3D"color:#859900">i=
32</span> <span style=3D"color:#268bd2">%mul</span>, <span style=3D"color:#=
859900">i32</span>* <span style=3D"color:#268bd2">%a.addr</span>
=09
	<span style=3D"color:#268bd2">%2</span> =3D <span style=3D"color:#859900">=
load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
	<span style=3D"color:#268bd2">%3</span> =3D <span style=3D"color:#859900">=
load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
=09
	<span style=3D"color:#268bd2">%mul1</span> =3D <span style=3D"color:#85990=
0">mul</span> <span style=3D"color:#859900">nsw</span> <span style=3D"color=
:#859900">i32</span> <span style=3D"color:#268bd2">%2</span>, <span style=
=3D"color:#268bd2">%3</span>
	<span style=3D"color:#859900">store</span> <span style=3D"color:#859900">i=
32</span> <span style=3D"color:#268bd2">%mul1</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
=09
	<span style=3D"color:#268bd2">%4</span> =3D <span style=3D"color:#859900">=
load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%a.addr</span>
	<span style=3D"color:#268bd2">%5</span> =3D <span style=3D"color:#859900">=
load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"color:=
#859900">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
=09
	<span style=3D"color:#268bd2">%add</span> =3D <span style=3D"color:#859900=
">add</span> <span style=3D"color:#859900">nsw</span> <span style=3D"color:=
#859900">i32</span> <span style=3D"color:#268bd2">%4</span>, <span style=3D=
"color:#268bd2">%5</span>
=09
	<span style=3D"color:#859900">ret</span> <span style=3D"color:#859900">i32=
</span> <span style=3D"color:#268bd2">%add</span>

}
</code></pre></div><p><a href=3D"https://godbolt.org/z/qnE6nj91j">Godbolt</=
a> (I=E2=80=99ve cleaned up the example to make it easier to read)</p><p>Th=
at looks like C style assembly hybrid and that=E2=80=99s kind of what it is=
. Let=E2=80=99s try to go through what all this generated code means. There=
=E2=80=99s a function declaration in first line which tells us datatype thi=
s function will be returning, then it=E2=80=99s name <code>square_add</code=
> (I changed the name from generated output to explain better) and then fin=
ally arguments with their specified data types.</p><p>This function contain=
s a bunch of instructions to compute values from the given arguments. In th=
is example we see few of them as <code>add</code>, <code>mul</code>, <code>=
ret</code>, <code>alloca</code>, <code>load</code>, <code>store</code>.</p>=
<p>LLVM identifiers come in two types</p><ul><li>Global identifiers (functi=
ons, global variables) begin with the <code>'@'</code> character.</li><li>L=
ocal identifiers (register names, types) begin with the <code>'%'</code> ch=
aracter.</li></ul><p>In this example <code>%mul1 =3D mul nsw i32 %2, %3</co=
de> is actually the multiplication of two 32-bit integers which is stored i=
n <code>%mul1</code> virtual register. There can be an unlimited number of =
these virtual registers unlike any real world CPU. LLVM automatically maps =
these registers to target registers during IR to object compilation.</p><p>=
Let=E2=80=99s take a look at these instructions</p><h3 id=3D"alloca"><code>=
alloca</code></h3><p>The <code>alloca</code> instruction is used to allocat=
e memory on the stack of the current function, which is then automatically =
freed when this function returns. This is exactly same as how local variabl=
e behave in C like programming languages</p><div class=3D"highlight"><pre s=
tyle=3D"color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:=
4;tab-size:4"><code class=3D"language-llvm" data-lang=3D"llvm"><span style=
=3D"color:#268bd2">%a.addr</span> =3D <span style=3D"color:#859900">alloca<=
/span> <span style=3D"color:#859900">i32</span>
</code></pre></div><p>This instruction allocates space for a 32-bit signed =
integer on the stack. The pointer is stored in the register <code>%a.addr</=
code>.</p><h3 id=3D"store"><code>store</code></h3><p>The <code>store</code>=
 instruction is used to write a value to memory</p><div class=3D"highlight"=
><pre style=3D"color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-ta=
b-size:4;tab-size:4"><code class=3D"language-llvm" data-lang=3D"llvm"><span=
 style=3D"color:#859900">store</span> <span style=3D"color:#859900">i32</sp=
an> <span style=3D"color:#268bd2">%mul1</span>, <span style=3D"color:#85990=
0">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
</code></pre></div><p>Here we tell LLVM to store a 32-bit integer from <cod=
e>%mul1</code> register into the register <code>%b.addr</code> which is a p=
ointer to 32-bit integer.</p><h3 id=3D"load"><code>load</code></h3><p>The <=
code>load</code> instruction is used to read from memory.</p><div class=3D"=
highlight"><pre style=3D"color:#586e75;background-color:#eee8d5;-moz-tab-si=
ze:4;-o-tab-size:4;tab-size:4"><code class=3D"language-llvm" data-lang=3D"l=
lvm"><span style=3D"color:#268bd2">%2</span> =3D <span style=3D"color:#8599=
00">load</span> <span style=3D"color:#859900">i32</span>, <span style=3D"co=
lor:#859900">i32</span>* <span style=3D"color:#268bd2">%b.addr</span>
</code></pre></div><p>In the example above, we load 32-bit integer from the=
 memory address <code>%b.addr</code>. This value is stored into the registe=
r <code>%2</code>.</p><h3 id=3D"add--mul">add / mul</h3><p><code>add</code>=
, <code>mul</code> instruction are used to perform arithmetic operation bet=
ween two registers.</p><div class=3D"highlight"><pre style=3D"color:#586e75=
;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code c=
lass=3D"language-llvm" data-lang=3D"llvm"><span style=3D"color:#268bd2">%ad=
d</span> =3D <span style=3D"color:#859900">add</span> <span style=3D"color:=
#859900">nsw</span> <span style=3D"color:#859900">i32</span> <span style=3D=
"color:#268bd2">%4</span>, <span style=3D"color:#268bd2">%5</span>
</code></pre></div><p>In this example we add two 32-bit integers in <code>%=
4</code> and <code>%5</code> register and store its result in <code>%add</c=
ode> register.</p><h3 id=3D"ret">ret</h3><p>The <code>ret</code> instructio=
n is used to return control flow (and optionally a value) from a function.<=
/p><div class=3D"highlight"><pre style=3D"color:#586e75;background-color:#e=
ee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-llv=
m" data-lang=3D"llvm"><span style=3D"color:#859900">ret</span> <span style=
=3D"color:#859900">i32</span> <span style=3D"color:#268bd2">%add</span>
</code></pre></div><p>In this example, we return a 32-bit integer stored in=
 <code>%add</code> register back to the caller.</p><h2 id=3D"hello-world-in=
-ir">Hello world in IR</h2><div class=3D"highlight"><pre style=3D"color:#58=
6e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><co=
de class=3D"language-llvm" data-lang=3D"llvm"><span style=3D"color:#268bd2"=
>@msg</span> =3D <span style=3D"color:#859900">constant</span> [<span style=
=3D"color:#2aa198;font-weight:700">12</span> <span style=3D"color:#859900">=
x</span> <span style=3D"color:#859900">i8</span>] <span style=3D"color:#859=
900">c</span><span style=3D"color:#2aa198">"hello world\00"</span>

<span style=3D"color:#859900">declare</span> <span style=3D"color:#859900">=
i32</span> <span style=3D"color:#268bd2">@puts</span>(<span style=3D"color:=
#859900">i8</span>*)

<span style=3D"color:#859900">define</span> <span style=3D"color:#859900">i=
32</span> <span style=3D"color:#268bd2">@main</span>() {
    <span style=3D"color:#268bd2">%str</span> =3D <span style=3D"color:#859=
900">getelementptr</span> [<span style=3D"color:#2aa198;font-weight:700">12=
</span> <span style=3D"color:#859900">x</span> <span style=3D"color:#859900=
">i8</span>],[<span style=3D"color:#2aa198;font-weight:700">12</span> <span=
 style=3D"color:#859900">x</span> <span style=3D"color:#859900">i8</span>]*=
 <span style=3D"color:#268bd2">@msg</span>, <span style=3D"color:#859900">i=
64</span> <span style=3D"color:#2aa198;font-weight:700">0</span>, <span sty=
le=3D"color:#859900">i64</span> <span style=3D"color:#2aa198;font-weight:70=
0">0</span>

    <span style=3D"color:#859900">call</span> <span style=3D"color:#859900"=
>i32</span> <span style=3D"color:#268bd2">@puts</span>(<span style=3D"color=
:#859900">i8</span>* <span style=3D"color:#268bd2">%str</span>)
    <span style=3D"color:#859900">ret</span> <span style=3D"color:#859900">=
i32</span> <span style=3D"color:#2aa198;font-weight:700">0</span>
}

</code></pre></div><p>Writing a hello world is not too different from what =
we do in C. First we declare a i8 array of size 12 and initialize it with a=
 value =E2=80=9Chello world=E2=80=9D with null terminator.</p><p>We declare=
 external <code>puts</code> function which will be resolved in linking step=
 when this function will be mapped to c library by the linker.</p><p>Then w=
e define the main function which returns an integer very much like our usua=
l C programs. On the first line we use the infamous GEP instruction to get =
the address to the first byte of our array. Once we get that, we store the =
pointer in <code>%str</code> register and call the external <code>puts</cod=
e> function and return from the function with value <code>0</code>.</p><p>T=
he <code>getelementptr</code> a/k/a <code>GEP</code> instruction is used to=
 get the address of a subelement of an aggregate data structure. It=E2=80=
=99s like <code>lea</code> instruction in x86 assembly. The first argument =
is always a type used as the basis for the calculations. The second argumen=
t is always a pointer or a vector of pointers, and is the base address to s=
tart from. The remaining arguments (if any) are indices that indicate which=
 of the elements of the aggregate object are indexed.</p><p>To run this pro=
gram save the code in <code>hello-world.ll</code> file and compile it with =
<code>clang</code></p><div class=3D"highlight"><pre style=3D"color:#586e75;=
background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code cl=
ass=3D"language-bash" data-lang=3D"bash">$ clang hello-world.ll -O3 -o hell=
o-world
</code></pre></div><p>Then finally run the compiled program to see it in ac=
tion, you should hopefully see <code>hello world</code> get printed out.</p=
><div class=3D"highlight"><pre style=3D"color:#586e75;background-color:#eee=
8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-bash"=
 data-lang=3D"bash">$ ./hello-world
</code></pre></div><p>Now we can move onto implementing brainfuck compiler<=
/p><h1 id=3D"what-is-brainfuck">What is BrainFuck?</h1><p>Brainfuck is a pr=
ogramming language which just has 8 instructions. A brainfuck program conta=
ins these 8 characters and optionally extra characters which are usually ig=
nored as comments. The instructions are executed one by one starting from t=
he first instruction in the command till the end.</p><p>The memory model ha=
s a one-dimensional array of 30,000 cells initialized to 0, a data pointer =
which points to one of the cell as index in this array of cell, instruction=
 pointer, an io stream to read input and write output as a single character=
.</p><h3 id=3D"commands">Commands</h3><p>The eight language commands each c=
onsist of a single character:</p><ul><li><code>&gt;</code> Increment the da=
ta pointer (to point to the next cell to the right).</li><li><code>&lt;</co=
de> Decrement the data pointer (to point to the next cell to the left).</li=
><li><code>+</code> Increment (increase by one) the byte at the data pointe=
r.</li><li><code>-</code> Decrement (decrease by one) the byte at the data =
pointer.</li><li><code>.</code> Output the byte at cell pointed by the data=
 pointer.</li><li><code>,</code> Accept one byte of input, and store it in =
the cell pointing by the data pointer.</li><li><code>[</code> If the byte a=
t the data pointer is zero, then instead of moving the instruction pointer =
forward to the next command, jump it forward to the command after the match=
ing <code>]</code> command.</li><li><code>]</code> If the byte at the data =
pointer is nonzero, then instead of moving the instruction pointer forward =
to the next command, jump it back to the command after the matching <code>[=
</code> command.</li></ul><p>Since the language is very simple, writing an =
interpreter is not too difficult. You can find link to my interpreter <a hr=
ef=3D"https://github.com/spl0i7/gollvm-bf/blob/main/interpreter/main.go">he=
re</a>. We will be using the design of interpreter to write the compiler</p=
><h1 id=3D"crafting-the-compiler">Crafting the Compiler</h1><p>We=E2=80=99l=
l be using Go to write the compiler using <a href=3D"https://github.com/lli=
r/llvm">llvm</a> package. To begin, we=E2=80=99ll first create a main funct=
ion which can read the program source file using command line argument. The=
n we will declare a LLVM <code>module</code> and try to go through each ins=
truction in our language spec using a switch-case statement. In those cases=
 we=E2=80=99ll implement instruction specific IR code in the following sect=
ions and then finally print the module in the string format which is going =
to print the generated IR to stdout.</p><div class=3D"highlight"><pre style=
=3D"color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;ta=
b-size:4"><code class=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">func</span> <span style=3D"color:#268bd2">mai=
n</span>() { =20
 =20
   <span style=3D"color:#268bd2">file</span>, <span style=3D"color:#268bd2"=
>err</span> :=3D <span style=3D"color:#268bd2">os</span>.<span style=3D"col=
or:#268bd2">Open</span>(<span style=3D"color:#268bd2">os</span>.<span style=
=3D"color:#268bd2">Args</span>[<span style=3D"color:#2aa198;font-weight:700=
">1</span>]) =20
   <span style=3D"color:#859900">if</span> <span style=3D"color:#268bd2">er=
r</span> !=3D <span style=3D"color:#859900;font-weight:700">nil</span> { =
=20
      <span style=3D"color:#268bd2">log</span>.<span style=3D"color:#268bd2=
">Fatalln</span>(<span style=3D"color:#268bd2">err</span>) =20
   } =20
 =20
   <span style=3D"color:#268bd2">program</span>, <span style=3D"color:#268b=
d2">err</span> :=3D <span style=3D"color:#268bd2">io</span>.<span style=3D"=
color:#268bd2">ReadAll</span>(<span style=3D"color:#268bd2">file</span>) =
=20
   <span style=3D"color:#859900">if</span> <span style=3D"color:#268bd2">er=
r</span> !=3D <span style=3D"color:#859900;font-weight:700">nil</span> { =
=20
      <span style=3D"color:#268bd2">log</span>.<span style=3D"color:#268bd2=
">Fatalln</span>(<span style=3D"color:#268bd2">err</span>) =20
   } =20
  =20
   <span style=3D"color:#268bd2">mod</span> :=3D <span style=3D"color:#268b=
d2">ir</span>.<span style=3D"color:#268bd2">NewModule</span>() =20
 =20
   <span style=3D"color:#859900">for</span> <span style=3D"color:#268bd2">i=
</span> :=3D <span style=3D"color:#2aa198;font-weight:700">0</span>; <span =
style=3D"color:#268bd2">i</span> &lt; <span style=3D"color:#cb4b16">len</sp=
an>(<span style=3D"color:#268bd2">program</span>); <span style=3D"color:#26=
8bd2">i</span>++ { =20
      <span style=3D"color:#859900">switch</span> <span style=3D"color:#268=
bd2">program</span>[<span style=3D"color:#268bd2">i</span>] { =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">'+'</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">'-'</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">'&lt;'</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">'&gt;'</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">'.'</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">','</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">'['</span>: =20
      <span style=3D"color:#859900">case</span> <span style=3D"color:#2aa19=
8">']'</span>: =20
      } =20
   } =20
 =20
   <span style=3D"color:#268bd2">fmt</span>.<span style=3D"color:#268bd2">P=
rintln</span>(<span style=3D"color:#268bd2">mod</span>.<span style=3D"color=
:#268bd2">String</span>()) =20
}
</code></pre></div><p>But before implementing instructions, we need some bo=
ilerplate code in place. We need to declare few function from the C standar=
d library which will be used in this program for input/output and initializ=
ing the cell memory as 0.</p><div class=3D"highlight"><pre style=3D"color:#=
586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><=
code class=3D"language-go" data-lang=3D"go">
<span style=3D"color:#93a1a1;font-style:italic">// declare C libary functio=
ns
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">getchar</span> :=3D <span style=3D"color:#268bd2">mod</s=
pan>.<span style=3D"color:#268bd2">NewFunc</span>(<span style=3D"color:#2aa=
198">"getchar"</span>, <span style=3D"color:#268bd2">types</span>.<span sty=
le=3D"color:#268bd2">I8</span>)=20

<span style=3D"color:#268bd2">putchar</span> :=3D <span style=3D"color:#268=
bd2">mod</span>.<span style=3D"color:#268bd2">NewFunc</span>(<span style=3D=
"color:#2aa198">"putchar"</span>, <span style=3D"color:#268bd2">types</span=
>.<span style=3D"color:#268bd2">I32</span>, <span style=3D"color:#268bd2">i=
r</span>.<span style=3D"color:#268bd2">NewParam</span>(<span style=3D"color=
:#2aa198">"p1"</span>, <span style=3D"color:#268bd2">types</span>.<span sty=
le=3D"color:#268bd2">I8</span>))

<span style=3D"color:#268bd2">memset</span> :=3D <span style=3D"color:#268b=
d2">mod</span>.<span style=3D"color:#268bd2">NewFunc</span>(<span style=3D"=
color:#2aa198">"memset"</span>, <span style=3D"color:#268bd2">types</span>.=
<span style=3D"color:#268bd2">Void</span>, <span style=3D"color:#268bd2">ir=
</span>.<span style=3D"color:#268bd2">NewParam</span>(<span style=3D"color:=
#2aa198">"ptr"</span>, <span style=3D"color:#268bd2">types</span>.<span sty=
le=3D"color:#268bd2">I8Ptr</span>), <span style=3D"color:#268bd2">ir</span>=
.<span style=3D"color:#268bd2">NewParam</span>(<span style=3D"color:#2aa198=
">"val"</span>, <span style=3D"color:#268bd2">types</span>.<span style=3D"c=
olor:#268bd2">I8</span>), <span style=3D"color:#268bd2">ir</span>.<span sty=
le=3D"color:#268bd2">NewParam</span>(<span style=3D"color:#2aa198">"len"</s=
pan>, <span style=3D"color:#268bd2">types</span>.<span style=3D"color:#268b=
d2">I64</span>))

<span style=3D"color:#93a1a1;font-style:italic">// declare main
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">entryPoint</span> :=3D <span style=3D"color:#268bd2">mod=
</span>.<span style=3D"color:#268bd2">NewFunc</span>(<span style=3D"color:#=
2aa198">"main"</span>, <span style=3D"color:#268bd2">types</span>.<span sty=
le=3D"color:#268bd2">I32</span>)

<span style=3D"color:#93a1a1;font-style:italic">// block inside main where =
IR instructions will live
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">builder</span> :=3D <span style=3D"color:#268bd2">entryP=
oint</span>.<span style=3D"color:#268bd2">NewBlock</span>(<span style=3D"co=
lor:#2aa198">""</span>)
</code></pre></div><ul><li><code>getchar()</code> - function reads a single=
 character from stdin and returns that character to the caller. This will b=
e used to read from stdin to cell memory.</li><li><code>putchar()</code> - =
function writes a character to the stdout. This will be used to output the =
character to stdout in a memory cell.</li><li><code>memset()</code> - funct=
ion writes <code>len</code> bytes of <code>val</code> to the string <code>p=
tr</code>. We will use this to initialize the cell memory to 0 at the start=
 of the program.</li></ul><p>Once we have these basic functions, we declare=
 the <code>main</code> function for our program, and we add an unnamed bloc=
k in our source code. This block is where rest of our code will live.</p><p=
>Next we allocate space for a byte array of 30,000 cells, allocate space fo=
r data pointer which will be used as index for that array. Then we initiali=
ze both with 0. For array, we call the <code>memset()</code> and set the va=
lue to zero. For the data pointer variable we just store 0 constant there.<=
/p><div class=3D"highlight"><pre style=3D"color:#586e75;background-color:#e=
ee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-go"=
 data-lang=3D"go"><span style=3D"color:#93a1a1;font-style:italic">// type o=
f array:  [30000 x i8]
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">arrayType</span> :=3D <span style=3D"color:#268bd2">type=
s</span>.<span style=3D"color:#268bd2">NewArray</span>(<span style=3D"color=
:#268bd2">MemSize</span>, <span style=3D"color:#268bd2">types</span>.<span =
style=3D"color:#268bd2">I8</span>)

<span style=3D"color:#93a1a1;font-style:italic">// create an array
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">cellMemory</span> :=3D <span style=3D"color:#268bd2">bui=
lder</span>.<span style=3D"color:#268bd2">NewAlloca</span>(<span style=3D"c=
olor:#268bd2">arrayType</span>) =20

<span style=3D"color:#93a1a1;font-style:italic">// allocate space for index=
 in the memory cell
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">dataPtr</span> :=3D <span style=3D"color:#268bd2">builde=
r</span>.<span style=3D"color:#268bd2">NewAlloca</span>(<span style=3D"colo=
r:#268bd2">types</span>.<span style=3D"color:#268bd2">I64</span>) =20

<span style=3D"color:#93a1a1;font-style:italic">// initialize the cell into=
 zero
</span><span style=3D"color:#93a1a1;font-style:italic"></span><span style=
=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewStore</s=
pan>(<span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#26=
8bd2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span style=
=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;font-weight:700=
">0</span>), <span style=3D"color:#268bd2">dataPtr</span>)

<span style=3D"color:#93a1a1;font-style:italic">// call memset: memset(&amp=
;array, 0, 30000)
</span><span style=3D"color:#93a1a1;font-style:italic"></span>
<span style=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">=
NewCall</span>(<span style=3D"color:#268bd2">memset</span>, =20
   <span style=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd=
2">NewGetElementPtr</span>(<span style=3D"color:#268bd2">arrayType</span>, =
<span style=3D"color:#268bd2">cellMemory</span>, <span style=3D"color:#268b=
d2">constant</span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=
=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I64</span>, <=
span style=3D"color:#2aa198;font-weight:700">0</span>), <span style=3D"colo=
r:#268bd2">constant</span>.<span style=3D"color:#268bd2">NewInt</span>(<spa=
n style=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I64</s=
pan>, <span style=3D"color:#2aa198;font-weight:700">0</span>)), =20
   <span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#268b=
d2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span style=3D=
"color:#268bd2">I8</span>, <span style=3D"color:#2aa198;font-weight:700">0<=
/span>), =20
   <span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#268b=
d2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span style=3D=
"color:#268bd2">I64</span>, <span style=3D"color:#268bd2">MemSize</span>), =
=20
) =20

</code></pre></div><p>We can now start implementing the language instructio=
ns.</p><h2 id=3D"implementing-">Implementing =E2=80=98+=E2=80=99</h2><p>To =
implement <code>+</code> instruction we need to get the cell pointed by dat=
a pointer (<code>dataPtr</code>) index, add one to it and then store it bac=
k in the array.</p><div class=3D"highlight"><pre style=3D"color:#586e75;bac=
kground-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=
=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">'+'=
</span>: =20

<span style=3D"color:#93a1a1;font-style:italic">// get the dataPtr th index=
 in the array
</span><span style=3D"color:#93a1a1;font-style:italic"></span>
   <span style=3D"color:#268bd2">ptr</span> :=3D <span style=3D"color:#268b=
d2">builder</span>.<span style=3D"color:#268bd2">NewGetElementPtr</span>(<s=
pan style=3D"color:#268bd2">arrayType</span>, <span style=3D"color:#268bd2"=
>cellMemory</span>, <span style=3D"color:#268bd2">constant</span>.<span sty=
le=3D"color:#268bd2">NewInt</span>(<span style=3D"color:#268bd2">types</spa=
n>.<span style=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;f=
ont-weight:700">0</span>), <span style=3D"color:#268bd2">builder</span>.<sp=
an style=3D"color:#268bd2">NewLoad</span>(<span style=3D"color:#268bd2">typ=
es</span>.<span style=3D"color:#268bd2">I64</span>, <span style=3D"color:#2=
68bd2">dataPtr</span>))

<span style=3D"color:#93a1a1;font-style:italic">// add 1 to it
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">added</span> :=3D <span style=3D"color:#268bd2">builder<=
/span>.<span style=3D"color:#268bd2">NewAdd</span>(<span style=3D"color:#26=
8bd2">builder</span>.<span style=3D"color:#268bd2">NewLoad</span>(<span sty=
le=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, =
<span style=3D"color:#268bd2">ptr</span>), <span style=3D"color:#268bd2">co=
nstant</span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=3D"co=
lor:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, <span st=
yle=3D"color:#2aa198;font-weight:700">1</span>)) =20

<span style=3D"color:#93a1a1;font-style:italic">// store it back in the arr=
ay
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewStore</s=
pan>(<span style=3D"color:#268bd2">added</span>, <span style=3D"color:#268b=
d2">ptr</span>)
</code></pre></div><h2 id=3D"implementing--">Implementing =E2=80=98-=E2=80=
=99</h2><p>This one is the same as <code>+</code> but we just decrement the=
 cell value instead of adding.</p><div class=3D"highlight"><pre style=3D"co=
lor:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size=
:4"><code class=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">'-'=
</span>: =20

<span style=3D"color:#93a1a1;font-style:italic">// get the dataPtr th index=
 in the array
</span><span style=3D"color:#93a1a1;font-style:italic"></span>
   <span style=3D"color:#268bd2">ptr</span> :=3D <span style=3D"color:#268b=
d2">builder</span>.<span style=3D"color:#268bd2">NewGetElementPtr</span>(<s=
pan style=3D"color:#268bd2">arrayType</span>, <span style=3D"color:#268bd2"=
>cellMemory</span>, <span style=3D"color:#268bd2">constant</span>.<span sty=
le=3D"color:#268bd2">NewInt</span>(<span style=3D"color:#268bd2">types</spa=
n>.<span style=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;f=
ont-weight:700">0</span>), <span style=3D"color:#268bd2">builder</span>.<sp=
an style=3D"color:#268bd2">NewLoad</span>(<span style=3D"color:#268bd2">typ=
es</span>.<span style=3D"color:#268bd2">I64</span>, <span style=3D"color:#2=
68bd2">dataPtr</span>))

<span style=3D"color:#93a1a1;font-style:italic">// subtract 1 to it
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">added</span> :=3D <span style=3D"color:#268bd2">builder<=
/span>.<span style=3D"color:#268bd2">NewAdd</span>(<span style=3D"color:#26=
8bd2">builder</span>.<span style=3D"color:#268bd2">NewLoad</span>(<span sty=
le=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, =
<span style=3D"color:#268bd2">ptr</span>), <span style=3D"color:#268bd2">co=
nstant</span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=3D"co=
lor:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, -<span s=
tyle=3D"color:#2aa198;font-weight:700">1</span>)) =20

<span style=3D"color:#93a1a1;font-style:italic">// store it back in the arr=
ay
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewStore</s=
pan>(<span style=3D"color:#268bd2">added</span>, <span style=3D"color:#268b=
d2">ptr</span>)
</code></pre></div><h2 id=3D"implementing--1">Implementing =E2=80=98&gt;=E2=
=80=99</h2><p>This instruction is also very straightforward. We just load t=
he <code>dataPtr</code> into a register, add one to it. Store this new valu=
e back in the <code>dataPtr</code> memory location.</p><div class=3D"highli=
ght"><pre style=3D"color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-=
o-tab-size:4;tab-size:4"><code class=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">'&g=
t;'</span>: =20

<span style=3D"color:#93a1a1;font-style:italic">// increment the index by o=
ne
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">t1</span> :=3D <span style=3D"color:#268bd2">builder</s=
pan>.<span style=3D"color:#268bd2">NewAdd</span>(<span style=3D"color:#268b=
d2">builder</span>.<span style=3D"color:#268bd2">NewLoad</span>(<span style=
=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I64</span>, <=
span style=3D"color:#268bd2">dataPtr</span>), <span style=3D"color:#268bd2"=
>constant</span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=3D=
"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, +<spa=
n style=3D"color:#2aa198;font-weight:700">1</span>)) =20

<span style=3D"color:#93a1a1;font-style:italic">// store the new value in t=
he dataPtr
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewStore</=
span>(<span style=3D"color:#268bd2">t1</span>, <span style=3D"color:#268bd2=
">dataPtr</span>)
</code></pre></div><h2 id=3D"implementing--2">Implementing =E2=80=98&lt;=E2=
=80=99</h2><p>This one is same as <code>&gt;</code>, we just decrement the =
<code>dataPtr</code> by 1 instead.</p><div class=3D"highlight"><pre style=
=3D"color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;ta=
b-size:4"><code class=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">'&l=
t;'</span>: =20

<span style=3D"color:#93a1a1;font-style:italic">// decrement the datapointe=
r by one
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">t1</span> :=3D <span style=3D"color:#268bd2">builder</s=
pan>.<span style=3D"color:#268bd2">NewAdd</span>(<span style=3D"color:#268b=
d2">builder</span>.<span style=3D"color:#268bd2">NewLoad</span>(<span style=
=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I64</span>, <=
span style=3D"color:#268bd2">dataPtr</span>), <span style=3D"color:#268bd2"=
>constant</span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=3D=
"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, -<spa=
n style=3D"color:#2aa198;font-weight:700">1</span>)) =20

<span style=3D"color:#93a1a1;font-style:italic">// store the new value in t=
he dataPtr
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewStore</=
span>(<span style=3D"color:#268bd2">t1</span>, <span style=3D"color:#268bd2=
">dataPtr</span>)
</code></pre></div><h2 id=3D"implementing--3">Implementing =E2=80=98[=E2=80=
=99</h2><p>For <code>[</code> instruction we need to use a stack to keep tr=
ack of current loop block (just like in the interpreter implementation). If=
 the current cell is zero we jump to the end of the loop otherwise we jump =
to the body of the loop.</p><p>Note that we=E2=80=99ve created two new bloc=
ks to denote body and end of the loop by creating new basic block. We did n=
ot name them explicitly (they will be automatically named).</p><div class=
=3D"highlight"><pre style=3D"color:#586e75;background-color:#eee8d5;-moz-ta=
b-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-go" data-lang=3D=
"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">'['=
</span>:
<span style=3D"color:#93a1a1;font-style:italic">// get a pointer to cell po=
inted by dataPtr index
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">ptr</span> :=3D <span style=3D"color:#268bd2">builder</=
span>.<span style=3D"color:#268bd2">NewGetElementPtr</span>(<span style=3D"=
color:#268bd2">arrayType</span>, <span style=3D"color:#268bd2">cellMemory</=
span>, <span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#=
268bd2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span styl=
e=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;font-weight:70=
0">0</span>), <span style=3D"color:#268bd2">builder</span>.<span style=3D"c=
olor:#268bd2">NewLoad</span>(<span style=3D"color:#268bd2">types</span>.<sp=
an style=3D"color:#268bd2">I64</span>, <span style=3D"color:#268bd2">dataPt=
r</span>))=20
=09
<span style=3D"color:#93a1a1;font-style:italic">// load this cell value in =
ld
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">ld</span> :=3D <span style=3D"color:#268bd2">builder</s=
pan>.<span style=3D"color:#268bd2">NewLoad</span>(<span style=3D"color:#268=
bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, <span style=3D"c=
olor:#268bd2">ptr</span>) =20
=09
<span style=3D"color:#93a1a1;font-style:italic">// check if this cell's vau=
e is equal to 0 or not.
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">cmpResult</span> :=3D <span style=3D"color:#268bd2">bui=
lder</span>.<span style=3D"color:#268bd2">NewICmp</span>(<span style=3D"col=
or:#268bd2">enum</span>.<span style=3D"color:#268bd2">IPredNE</span>, <span=
 style=3D"color:#268bd2">ld</span>, <span style=3D"color:#268bd2">constant<=
/span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=3D"color:#26=
8bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, <span style=3D"=
color:#2aa198;font-weight:700">0</span>))
=09
=09
<span style=3D"color:#93a1a1;font-style:italic">// create new basic block(s=
) to store the loop's body and end of loop
</span><span style=3D"color:#93a1a1;font-style:italic"></span>    <span sty=
le=3D"color:#268bd2">wb</span> :=3D <span style=3D"color:#268bd2">Loop</spa=
n>{ =20
	    <span style=3D"color:#268bd2">Body</span>: <span style=3D"color:#268bd=
2">entryPoint</span>.<span style=3D"color:#268bd2">NewBlock</span>(<span st=
yle=3D"color:#2aa198">""</span>),
      <span style=3D"color:#268bd2">End</span>:  <span style=3D"color:#268b=
d2">entryPoint</span>.<span style=3D"color:#268bd2">NewBlock</span>(<span s=
tyle=3D"color:#2aa198">""</span>), =20
   }=20
=09
<span style=3D"color:#93a1a1;font-style:italic">// push it to stack so that=
 we remember when we encountered '['
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">st</span>.<span style=3D"color:#268bd2">Push</span>(<sp=
an style=3D"color:#268bd2">wb</span>)
=09
<span style=3D"color:#93a1a1;font-style:italic">// If cell is not zero then=
 goto body of the loop otherwise goto end =20
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewCondBr<=
/span>(<span style=3D"color:#268bd2">cmpResult</span>, <span style=3D"color=
:#268bd2">wb</span>.<span style=3D"color:#268bd2">Body</span>, <span style=
=3D"color:#268bd2">wb</span>.<span style=3D"color:#268bd2">End</span>)=20
=09
<span style=3D"color:#93a1a1;font-style:italic">// start writing subsequent=
 statements in to the body of the loop
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">builder</span> =3D <span style=3D"color:#268bd2">wb</sp=
an>.<span style=3D"color:#268bd2">Body</span>


</code></pre></div><h2 id=3D"implementing--4">Implementing =E2=80=98]=E2=80=
=99</h2><p>For <code>]</code> instruction we pop from stack to get the last=
 occurrence of <code>[</code> instruction because if current cell value is =
not zero then we have to jump to there. Ofcourse we expect stack to be not =
empty and if it is empty it means that we have excess number of <code>]</co=
de> compared to <code>[</code></p><div class=3D"highlight"><pre style=3D"co=
lor:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size=
:4"><code class=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">']'=
</span>:
<span style=3D"color:#93a1a1;font-style:italic">// pop from the stack, to g=
et the last encountered '['
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">front</span>, <span style=3D"color:#268bd2">ok</span> :=
=3D <span style=3D"color:#268bd2">st</span>.<span style=3D"color:#268bd2">P=
op</span>() =20
=09
<span style=3D"color:#93a1a1;font-style:italic">// if the stack is empty th=
en we have unbalanced number of ']'
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#859900">if</span> !<span style=3D"color:#268bd2">ok</span> { =20
	   <span style=3D"color:#268bd2">log</span>.<span style=3D"color:#268bd2">=
Fatalln</span>(<span style=3D"color:#268bd2">ErrUnexpectedBracket</span>) =
=20
	} =20
=09
<span style=3D"color:#93a1a1;font-style:italic">// get a pointer to cell po=
inted by dataPtr index
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">ptr</span> :=3D <span style=3D"color:#268bd2">builder</s=
pan>.<span style=3D"color:#268bd2">NewGetElementPtr</span>(<span style=3D"c=
olor:#268bd2">arrayType</span>, <span style=3D"color:#268bd2">cellMemory</s=
pan>, <span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#2=
68bd2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span style=
=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;font-weight:700=
">0</span>), <span style=3D"color:#268bd2">builder</span>.<span style=3D"co=
lor:#268bd2">NewLoad</span>(<span style=3D"color:#268bd2">types</span>.<spa=
n style=3D"color:#268bd2">I64</span>, <span style=3D"color:#268bd2">dataPtr=
</span>))=20
=09
<span style=3D"color:#93a1a1;font-style:italic">// load this cell value in =
ld
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">ld</span> :=3D <span style=3D"color:#268bd2">builder</sp=
an>.<span style=3D"color:#268bd2">NewLoad</span>(<span style=3D"color:#268b=
d2">types</span>.<span style=3D"color:#268bd2">I8</span>, <span style=3D"co=
lor:#268bd2">ptr</span>) =20
=09
<span style=3D"color:#93a1a1;font-style:italic">// compare if cell is zero?
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">cmpResult</span> :=3D <span style=3D"color:#268bd2">buil=
der</span>.<span style=3D"color:#268bd2">NewICmp</span>(<span style=3D"colo=
r:#268bd2">enum</span>.<span style=3D"color:#268bd2">IPredNE</span>, <span =
style=3D"color:#268bd2">ld</span>, <span style=3D"color:#268bd2">constant</=
span>.<span style=3D"color:#268bd2">NewInt</span>(<span style=3D"color:#268=
bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, <span style=3D"c=
olor:#2aa198;font-weight:700">0</span>)) =20
=09
<span style=3D"color:#93a1a1;font-style:italic">// if cell is not zero then=
 goto body of the loop otherwise goto end
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewCondBr</=
span>(<span style=3D"color:#268bd2">cmpResult</span>, <span style=3D"color:=
#268bd2">front</span>.<span style=3D"color:#268bd2">Body</span>, <span styl=
e=3D"color:#268bd2">front</span>.<span style=3D"color:#268bd2">End</span>) =
=20
=09
<span style=3D"color:#93a1a1;font-style:italic">// write subsequent stateme=
nt to end of the loop
</span><span style=3D"color:#93a1a1;font-style:italic"></span>	<span style=
=3D"color:#268bd2">builder</span> =3D <span style=3D"color:#268bd2">front</=
span>.<span style=3D"color:#268bd2">End</span>

</code></pre></div><h2 id=3D"implement-">Implement =E2=80=98,=E2=80=99</h2>=
<p>This just involves calling <code>getchar()</code> and storing the result=
 in the array at an index pointed by <code>dataptr</code> by <code>GEP</cod=
e> instruction.</p><div class=3D"highlight"><pre style=3D"color:#586e75;bac=
kground-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=
=3D"language-go" data-lang=3D"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">','=
</span>: =20
<span style=3D"color:#93a1a1;font-style:italic">// call getchar()
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">char</span> :=3D <span style=3D"color:#268bd2">builder<=
/span>.<span style=3D"color:#268bd2">NewCall</span>(<span style=3D"color:#2=
68bd2">getchar</span>) =20
  =20
<span style=3D"color:#93a1a1;font-style:italic">// get pointer to the eleme=
nt in the array
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">ptr</span> :=3D <span style=3D"color:#268bd2">builder</=
span>.<span style=3D"color:#268bd2">NewGetElementPtr</span>(<span style=3D"=
color:#268bd2">arrayType</span>, <span style=3D"color:#268bd2">cellMemory</=
span>, <span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#=
268bd2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span styl=
e=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;font-weight:70=
0">0</span>), <span style=3D"color:#268bd2">builder</span>.<span style=3D"c=
olor:#268bd2">NewLoad</span>(<span style=3D"color:#268bd2">types</span>.<sp=
an style=3D"color:#268bd2">I64</span>, <span style=3D"color:#268bd2">dataPt=
r</span>))=20
  =20
<span style=3D"color:#93a1a1;font-style:italic">// store the character in t=
hat pointer
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewStore</=
span>(<span style=3D"color:#268bd2">char</span>, <span style=3D"color:#268b=
d2">ptr</span>)
</code></pre></div><h2 id=3D"implement--1">Implement =E2=80=98.=E2=80=99</h=
2><p>To print the current cell, We get the current cell by <code>GEP</code>=
 instrunction and pass it to <code>putchar()</code> function.</p><div class=
=3D"highlight"><pre style=3D"color:#586e75;background-color:#eee8d5;-moz-ta=
b-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-go" data-lang=3D=
"go">
<span style=3D"color:#859900">case</span> <span style=3D"color:#2aa198">'.'=
</span>: =20
<span style=3D"color:#93a1a1;font-style:italic">// get the pointer to curre=
nt cell in the array
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">ptr</span> :=3D <span style=3D"color:#268bd2">builder</=
span>.<span style=3D"color:#268bd2">NewGetElementPtr</span>(<span style=3D"=
color:#268bd2">arrayType</span>, <span style=3D"color:#268bd2">cellMemory</=
span>, <span style=3D"color:#268bd2">constant</span>.<span style=3D"color:#=
268bd2">NewInt</span>(<span style=3D"color:#268bd2">types</span>.<span styl=
e=3D"color:#268bd2">I64</span>, <span style=3D"color:#2aa198;font-weight:70=
0">0</span>), <span style=3D"color:#268bd2">builder</span>.<span style=3D"c=
olor:#268bd2">NewLoad</span>(<span style=3D"color:#268bd2">types</span>.<sp=
an style=3D"color:#268bd2">I64</span>, <span style=3D"color:#268bd2">dataPt=
r</span>))=20

<span style=3D"color:#93a1a1;font-style:italic">// call putchar()
</span><span style=3D"color:#93a1a1;font-style:italic"></span>   <span styl=
e=3D"color:#268bd2">builder</span>.<span style=3D"color:#268bd2">NewCall</s=
pan>(<span style=3D"color:#268bd2">putchar</span>, <span style=3D"color:#26=
8bd2">builder</span>.<span style=3D"color:#268bd2">NewLoad</span>(<span sty=
le=3D"color:#268bd2">types</span>.<span style=3D"color:#268bd2">I8</span>, =
<span style=3D"color:#268bd2">ptr</span>))
</code></pre></div><p>This covers all the instruction in the language spec.=
 Now we finally add a terminator instruction to end our main function.</p><=
div class=3D"highlight"><pre style=3D"color:#586e75;background-color:#eee8d=
5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class=3D"language-go" dat=
a-lang=3D"go"><span style=3D"color:#268bd2">builder</span>.<span style=3D"c=
olor:#268bd2">NewRet</span>(<span style=3D"color:#268bd2">constant</span>.<=
span style=3D"color:#268bd2">NewInt</span>(<span style=3D"color:#268bd2">ty=
pes</span>.<span style=3D"color:#268bd2">I32</span>, <span style=3D"color:#=
2aa198;font-weight:700">0</span>))
</code></pre></div><p>Full source code <a href=3D"https://github.com/spl0i7=
/gollvm-bf/blob/main/compiler/main.go">here</a></p><h1 id=3D"benchmarking-p=
erformance">Benchmarking Performance</h1><table><thead><tr><th>program name=
</th><th>time(compiled with -O3)</th><th>time(interpreter)</th></tr></thead=
><tbody><tr><td>mandelbrot fractal (mb.bf)</td><td>620.74 millis</td><td>36=
.86 secs</td></tr><tr><td>tower of hanoi (hanoi.bf)</td><td>11.47 millis</t=
d><td>31.85 secs</td></tr><tr><td>hello world (hello-world.bf)</td><td>6.19=
 millis</td><td>213.93 millis</td></tr></tbody></table><p>As expected, comp=
iled version is orders of magnitude faster than the program ran on interpre=
ter. One interesting thing I observed in the tower of hanoi program was tha=
t the optimizer basically ran the whole program at the compile time in the =
executable it just prints the final state of the towers if compiled with <c=
ode>-O3</code> flag, We cannot even see the disks moving which is a remarka=
ble level of optimization.</p><h1 id=3D"closing-thoughts">Closing thoughts<=
/h1><p>I think LLVM is an amazing framework and process of building a compi=
ler with it is straightforward as it can get. Go=E2=80=99s LLVM library is =
also very ergonomic to work with but many functions just panic instead of r=
eturning an error properly which is not very pleasant specially because the=
 most tricky part of writing a good compiler is giving well-formed error me=
ssages to the user (wink wink rustc). Apart from this, It was a fun experie=
nce to use LLVM.</p><h1 id=3D"references">References</h1><ul><li><a href=3D=
"http://aosabook.org/en/llvm.html">http://aosabook.org/en/llvm.html</a></li=
><li><a href=3D"https://esolangs.org/wiki/Brainfuck">https://esolangs.org/w=
iki/Brainfuck</a></li><li><a href=3D"https://llvm.org/docs/LangRef.html">ht=
tps://llvm.org/docs/LangRef.html</a></li><li><a href=3D"https://github.com/=
llir/llvm">https://github.com/llir/llvm</a></li><li><a href=3D"https://muku=
lrathi.com/create-your-own-programming-language/llvm-ir-cpp-api-tutorial/">=
https://mukulrathi.com/create-your-own-programming-language/llvm-ir-cpp-api=
-tutorial/</a></li><li><a href=3D"https://blog.yossarian.net/2020/09/19/LLV=
Ms-getelementptr-by-example">https://blog.yossarian.net/2020/09/19/LLVMs-ge=
telementptr-by-example</a></li><li><a href=3D"https://www.youtube.com/watch=
?v=3Dm8G_S5LwlTo">https://www.youtube.com/watch?v=3Dm8G_S5LwlTo</a></li></u=
l></div><div class=3D"post-tags"></div></div><div class=3D"footer wrapper">=
<nav class=3D"nav"><div>=C2=A9 ketansingh.me</div></nav></div><!----></body=
></html>
------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=Ubuntu:300,400,300italic,400italic|Raleway:200,300

@charset "utf-8";

@font-face { font-family: Raleway; font-style: normal; font-weight: 200; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCAIT5lu.wof=
f2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0=
-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 200; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCkIT5lu.wof=
f2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1=
, U+2116; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 200; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCIIT5lu.wof=
f2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168=
-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 200; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCMIT5lu.wof=
f2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020,=
 U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 200; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyC0ITw.woff2=
") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2=
C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+22=
12, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 300; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCAIT5lu.wof=
f2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0=
-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 300; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCkIT5lu.wof=
f2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1=
, U+2116; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 300; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCIIT5lu.wof=
f2") format("woff2"); unicode-range: U+102-103, U+110-111, U+128-129, U+168=
-169, U+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 300; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyCMIT5lu.wof=
f2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020,=
 U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Raleway; font-style: normal; font-weight: 300; sr=
c: url("https://gstatic.loli.net/s/raleway/v28/1Ptug8zYS_SKggPNyC0ITw.woff2=
") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2=
C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+22=
12, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCp6KVjbNBYlgoKejZftVyCN4Ffgg=
.woff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+=
2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCp6KVjbNBYlgoKejZftVyLN4Ffgg=
.woff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0=
-4B1, U+2116; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCp6KVjbNBYlgoKejZftVyDN4Ffgg=
.woff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCp6KVjbNBYlgoKejZftVyMN4Ffgg=
.woff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCp6KVjbNBYlgoKejZftVyBN4Ffgg=
.woff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2=
020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCp6KVjbNBYlgoKejZftVyPN4E.wo=
ff2") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, =
U+2C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U=
+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCu6KVjbNBYlgoKej75l0mwFg.wof=
f2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0=
-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCu6KVjbNBYlgoKej7wl0mwFg.wof=
f2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1=
, U+2116; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCu6KVjbNBYlgoKej74l0mwFg.wof=
f2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCu6KVjbNBYlgoKej73l0mwFg.wof=
f2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCu6KVjbNBYlgoKej76l0mwFg.wof=
f2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020,=
 U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Ubuntu; font-style: italic; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCu6KVjbNBYlgoKej70l0k.woff2"=
) format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C=
6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+221=
2, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjvWyNL4U.wo=
ff2") format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE=
0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjtGyNL4U.wo=
ff2") format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B=
1, U+2116; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjvGyNL4U.wo=
ff2") format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCv6KVjbNBYlgoC1Czjs2yNL4U.wo=
ff2") format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjvmyNL4U.wo=
ff2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020=
, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 300; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjsGyN.woff2=
") format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2=
C6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+22=
12, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCs6KVjbNBYlgoKcg72j00.woff2"=
) format("woff2"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2D=
FF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCs6KVjbNBYlgoKew72j00.woff2"=
) format("woff2"); unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U=
+2116; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCs6KVjbNBYlgoKcw72j00.woff2"=
) format("woff2"); unicode-range: U+1F00-1FFF; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCs6KVjbNBYlgoKfA72j00.woff2"=
) format("woff2"); unicode-range: U+370-3FF; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCs6KVjbNBYlgoKcQ72j00.woff2"=
) format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+=
20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Ubuntu; font-style: normal; font-weight: 400; src=
: url("https://gstatic.loli.net/s/ubuntu/v20/4iCs6KVjbNBYlgoKfw72.woff2") f=
ormat("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, =
U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, =
U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://ketansingh.me/css/normalize.css

@charset "utf-8";

img, legend { border: 0px; }

legend, td, th { padding: 0px; }

html { font-family: serif; text-size-adjust: 100%; }

body { margin: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
menu, nav, section, summary { display: block; }

audio, canvas, progress, video { display: inline-block; vertical-align: bas=
eline; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, optgroup, strong { font-weight: 700; }

dfn { font-style: italic; }

h1 { font-size: 2em; margin: 0.67em 0px; }

mark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

svg:not(:root) { overflow: hidden; }

figure { margin: 1em 40px; }

hr { box-sizing: content-box; height: 0px; }

pre, textarea { overflow: auto; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { color: inherit; font: inherit; =
margin: 0px; }

button { overflow: visible; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { appearance: textfield; box-sizing: content-box; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { appearance: none; }

fieldset { border: 1px solid silver; margin: 0px 2px; padding: 0.35em 0.625=
em 0.75em; }

table { border-collapse: collapse; border-spacing: 0px; }
------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://ketansingh.me/css/main.css

@charset "utf-8";

body { font-family: ubuntu, sans-serif; font-weight: 400; color: rgb(51, 51=
, 51); line-height: 1.6; font-size: 16px; }

a, a:hover { color: rgb(170, 0, 0); text-decoration: none; word-break: brea=
k-word; }

html, button, input, select, textarea { color: rgb(51, 51, 51); }

::selection { background: rgb(179, 212, 252); text-shadow: none; }

hr { display: block; height: 1px; border-width: 1px 0px 0px; border-right-s=
tyle: initial; border-bottom-style: initial; border-left-style: initial; bo=
rder-right-color: initial; border-bottom-color: initial; border-left-color:=
 initial; border-image: initial; border-top-style: solid; border-top-color:=
 rgb(204, 204, 204); margin: 1rem 0px; padding: 0px; }

img { margin: 10px auto; max-width: 100%; }

a img { border: none; }

figure { margin: 0px; text-align: center; }

fieldset { border: 0px; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

blockquote { margin-left: 1rem; font-style: italic; font-size: 1.4rem; font=
-family: Georgia, "bitstream charter", serif; border-left: 3px solid rgb(17=
0, 0, 0); border-top-color: rgb(170, 0, 0); border-right-color: rgb(170, 0,=
 0); border-bottom-color: rgb(170, 0, 0); padding-left: 20px; }

blockquote cite { font-size: 70%; opacity: 0.8; }

blockquote em { font-weight: 600; }

a, a:hover { color: rgb(170, 0, 0); text-decoration: none; }

a:hover { text-decoration: underline; }

h1, h2, h3, h4, h5, h6 { font-family: raleway, sans-serif; line-height: 1.2=
; color: rgb(51, 51, 51); font-weight: 200; }

h1 { font-size: 2.75rem; }

h2 { font-size: 2rem; }

h3 { font-size: 1.6rem; }

h4 { font-size: 1.2rem; }

h5 { font-size: 1rem; }

h6 { font-size: 0.9rem; }

.align-center { text-align: center; }

.align-left { text-align: left; }

.align-right { text-align: right; }

.container { max-width: 800px; }

ul { padding-left: 15px; }

ul.flat { margin: 0px; padding: 0px; }

ul.flat li { display: inline-block; list-style: none; margin-left: 0px; }

.prevent-collapse { min-height: 0.1rem; }

.page-title { margin: 0px; }

.smaller { font-size: 70%; }

ul { list-style: inside disc; }

.site-title a { color: rgb(51, 51, 51); text-decoration: none !important; }

.post ul li { margin-bottom: 10px; }

.post ul li p { display: inline; }

.highlight pre { margin-bottom: 0px; margin-top: 0px; padding: 20px; backgr=
ound-color: transparent !important; }

.highlight { background: 0px 0px rgb(250, 250, 250); }

pre code { display: inline-block; }

.wrapper { max-width: 1024px; margin: 0px auto; }

.container { margin-top: 50px; }

.header { margin-bottom: 20px; padding-bottom: 20px; }

.header h1, .header h2 { margin: 0px; padding: 0px; font-size: 2rem; line-h=
eight: 1.3em; }

.header h2 { font-size: 1.125rem; }

.header nav { margin-top: 20px; border-top: 1px solid rgb(244, 244, 244); }

.header nav ul, .header nav li { margin: 0px; }

.header nav ul.flat { padding: 0px; }

.header nav ul.flat li { display: inline-block; list-style: none; margin-le=
ft: 0px; margin-right: 10px; margin-top: 10px; text-transform: capitalize; =
}

.header .site-description { display: flex; justify-content: space-between; =
}

.header .site-description nav { margin: 0px 0px 0px 15px; padding: 0px; bor=
der: none; min-width: 50px; }

.header .site-description nav ul svg { max-height: 15px; }

.section .section-header { font-size: 0.75rem; font-weight: 600; text-trans=
form: uppercase; color: rgb(153, 153, 153); margin-bottom: 20px; letter-spa=
cing: 1px; }

.recent-posts .posts .post { margin-bottom: 30px; }

.recent-posts .posts .post .meta, .post .post-header .meta, .list .posts .p=
ost .meta { font-size: 0.725rem; color: rgb(153, 153, 153); margin-bottom: =
4px; }

.post .post-header { margin-bottom: 30px; }

.post .post-header .title { margin: 0px; }

.post-tags a { margin-right: 5px; }

.post .post-header .meta { padding-left: 5px; margin-top: 10px; }

.post .draft-label { color: rgb(170, 0, 0); text-decoration: none; padding:=
 2px 4px; border-radius: 4px; margin-left: 6px; background-color: rgb(249, =
242, 244); }

.post-tags .tags li { margin-bottom: 0px; margin-top: 20px; }

.post-tags .tags a { display: inline-block; border: 1px solid rgb(170, 0, 0=
); border-radius: 4px; padding: 0px 6px; color: rgb(170, 0, 0); line-height=
: 20px; font-size: 12px; text-decoration: none; margin: 0px 1px; }

.list .posts .post .meta { margin-bottom: 0px; margin-left: 5px; }

.footer { text-align: right; font-size: 0.75em; color: rgb(153, 153, 153); =
border-top: 1px solid rgb(244, 244, 244); padding: 20px 0px; margin-top: 40=
px; }

.page-title { margin-bottom: 0px; }

.tag-cloud { margin-top: 20px; }

.tag-cloud a { margin-right: 15px; }

.pagination { margin: 0px; padding: 0px; text-align: left; display: flex; j=
ustify-content: space-between; }

.pagination li { list-style: none; display: inline-block; margin: 0px; padd=
ing: 0px; }

.pagination .page-prev { margin-right: 20px; padding-right: 20px; }

.pagination .page-item.page-prev { text-align: left; }

.pagination .page-item.page-next { text-align: right; }

table th { background-color: rgb(244, 244, 244); }

table th, table td { padding: 10px 20px; border: 1px solid rgb(221, 221, 22=
1); }

@media (max-width: 767px) {
  body { padding: 20px; }
  h1 { font-size: 1.8rem; }
  h2 { font-size: 1.6rem; }
  h3 { font-size: 1.2rem; }
  h4 { font-size: 1rem; }
  .container { margin-top: 10px; }
}

code { padding: 0px 2px 2px; border: 1px solid rgb(221, 221, 221); border-r=
adius: 3px; }
------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://ketansingh.me/css/dark.css

@charset "utf-8";

body { color: rgb(221, 221, 221); background-color: rgb(0, 0, 0); }

::selection { background: rgb(102, 102, 102); text-shadow: none; }

hr { border-color: rgb(51, 51, 51); }

blockquote { border-color: rgb(221, 221, 221); }

h1, h2, h3, h4, h5, h6 { color: rgb(221, 221, 221); }

a, a:hover { color: rgb(255, 121, 121); text-decoration: none; }

.site-description a, .site-description a:hover { color: rgb(221, 221, 221);=
 text-decoration: underline; }

a:hover { opacity: 0.8; }

.post-tags .tags a { border: 1px solid rgb(221, 221, 221); color: rgb(221, =
221, 221); }

.site-title a { color: rgb(221, 221, 221); text-decoration: none !important=
; }

.header nav, .footer { border-color: rgb(51, 51, 51); }

.highlight { background-color: rgb(0, 0, 0); }

table th { background-color: rgb(51, 51, 51); }

table th, table td { padding: 10px 20px; border: 1px solid rgb(102, 102, 10=
2); }

pre code { display: inline-block; }
------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://i.imgur.com/eQjSgoG.png

iVBORw0KGgoAAAANSUhEUgAAAlEAAAF4CAYAAAB0N6y9AAAgAElEQVR4Xuy9B5gURfe+fRQjiIoo
YsQMCEbMESNmxYxiFjAhKuqroq8BMyrmgBFRzIoRA4qKARNgQl4MmBFFRVGCAb/fXX/PfkUzu9uT
dmZnn7quuXZ2prvC3T1dT506dWquf/4vmZIIiIAIiIAIiIAIiEBWBOaSiMqKlw4WAREQAREQAREQ
gUBAIko3ggiIgAiIgAiIgAjkQEAiKgdoOkUEREAEREAEREAEJKJ0D4iACIiACIiACIhADgQkonKA
plNEQAREQAREQAREQCJK94AIiIAIiIAIiIAI5EBAIioHaDpFBERABERABERABCSidA+IgAiIgAiI
gAiIQA4EJKJygKZTREAEREAEREAEREAiSveACIiACIiACIiACORAQCIqB2g6RQREQAREQAREQAQk
onQPiIAIiIAIiIAIiEAOBCSicoCmU0RABERABERABERAIirlPfDXX3/ZiBEjbOjQofbVV1/ZIYcc
YjvssEPKs3WYCIiACIiACIhApRGQiKrlin7yySc2ePBgu+666+z777+vOnr11Ve3Dz/8sNLuB7VH
BERABERABEQgJQGJqGpAvfnmm3bmmWfac889V3VEixYtrFevXjb//PNbmzZtbOedd06JWYeJgAiI
gAiIgAhUGgGJqMQVfemll+yUU06xt956q+qbNddc004++WTbd999g4BSEgEREAEREAEREAGJqMQ9
sPLKK9tnn30WPu3UqZP16dPHNttsM5trrrl0t4iACIiACIiACIhAFQGJqMTNsOeee9ojjzwSPl1t
tdXshhtusK233jrVLfPzzz/bt99+a0svvbQ1a9Ys1Tk1HfTNN9/YJZdcEqxif/zxR6jPEUccYdtu
u+1sp02dOtWeeuop+/rrr22ttdayjh072jzzzJMxaxzkn3nmGfv888/DsRtssIHNN998eddVGYiA
CIiACIhAQyMgEZW44giSY4891gYNGlT1zfrrrx+m+Dp37jyHOPn7779t4MCBdtVVV9l7771XdQ5W
rO7duxuizNMDDzxgDz74oB111FG21VZbzXGvjRs3zlq3bh2sXgiyjTbayMaPHz/HcZx/2WWXWZMm
TWz48OG2++67G/X2RNkPP/ywNW7ceLZzWV3IuWPHjq36fNlll7UXX3zRsMApiYAIiIAIiIAIpCcg
EVUNK4QGK/Kuv/762QTHjTfeWOVQjqVo7733tpEjR1Ydg//UhAkTqkTN0UcfbVdffXUQXx06dLBR
o0bZiSeeaFdcccVsJSPAsAz179/fTjjhBLvwwgvDVCLpv//9r7EakGlG6oPFadddd7Xjjz/etttu
u6p8sFS56LrtttvssMMOq/oOseUWtaZNm4bzH3/88VDPgw46yO688870d42OFAEREAEREAERMImo
Wm4CLEK33357EDeIFxICCCF07733WpcuXcJnCBOsP0y1zZo1K0yvsZIP4XPccceF8+edd95wLFau
rl27zlbyeeedZ2effXaYrrvllluCZYhzzz333CCiPE2fPt0eeuihIH6OOeaY8PGmm25qd911l62w
wgrm+ZxzzjkhP9IPP/wQ8nPBdPPNNwcHeaxnCDaFa9CTQAREQAREQASyJyARlZLZzJkzg3DCR4r0
yiuv2IwZM6r8k954443gXxSnL774IggbFzJLLLFEeO/Tdn4sQq1Vq1ZB5Nxzzz22zz77VE0bYu3C
xyqZsBwR8JPpuDFjxljz5s3DIb/++msQabvsskvIk9SzZ0+79tprw3vEHtOE+EE9+eST4bNMlrGU
WHSYCIiACIiACDRYAhJR0aXHXwmBg4VnscUWy3hTsFLv1VdfDaKkbdu2ts0229hKK61kn3766RzH
MyXYrl278Pnvv/8efJhIr7/+ehAyJBy9Dz/88CofLKbd2rdvby64sCItvvjic+Tdt2/fYKEi7MJ9
991X7Q1M/m4Bw8p16623znbsoYcealdeeaUtssgiDfZHoIaLgAiIgAiIQC4EJKIiaggehA/WnW7d
uoUQBwsvvHBYGTdp0iQjhhS+SqRhw4bZkksuaWussUb4//333w/ih/Tnn3/aa6+9FhzL8VE644wz
7IILLgjO5Dhx47uEkzniBisQq+U8nX/++cHCtNxyy4WPPv74Y1tllVXmuLZM3+HLROrXr5+ddNJJ
Nvfcc89xHD5Y+GIx5Yf1jNWDtAOr14Ybbhj8sJREQAREQAREQASyJyARFTHDbwkxUlvC1wifIxKW
qBdeeCG833zzza1Ro0ZBKHliNRzO4Ky4Q9AQfiBeScdxRELHooR1CwGHyPHVcvhW7bjjjnNUadq0
aaE88iRhDdtjjz3ClCLO7Qg16hI7lP/yyy9BFCqJgAiIgAiIgAjkT0AiKsGQ7V5w3MbShCM5jtwk
pruYyiP8AX89TZw4MVia3NnbPyccAseyIi4O1Mm0HwLs0UcfDVN2WJN69OgRpuxwQKfc0aNHBzGF
2Mrka+VlIIooO15BGDcHYTZgwIAgqNj3jxV5TP0tuOCCs7WaKT82VV5ooYWqphHzv7WUgwiIgAiI
gAhUNgGJqAJdX1bk4b+EYEIc5Rvh/IMPPgihE4488shaa4jzORYngnIyZefWqXXXXTeIMEIZeLwq
xBmhEVZddVWbPHlyOJ5VhQg2hB/vlURABERABERABGonIBFVO6N6dwQ+WVjREEzuVP7ss88GqxcW
qUyJgKLEs3KH93rXaFVYBERABERABOqYgERUHQMvZXGEZBgyZEgIifDdd99Zy5YtQ4yoLbbYoioU
Qynrp7JFQAREQAREoD4RkIiqT1dLdRUBERABERABESgbAhJRZXMpVBEREAEREAEREIH6REAiqj5d
LdVVBERABERABESgbAhIRJXNpVBFREAEREAEREAE6hMBiaj6dLVUVxEQAREQAREQgbIhIBFVNpdC
FREBERABERABEahPBCSi6tPVUl1FQAREQAREQATKhoBEVNlcClVEBERABERABESgPhGQiCrx1br5
5pvDXnxt27YtcU1UvAiIgAiIgAiIQDYEJKKyoVWEY9nf7tZbb7V11lmnCLkrSxEQAREQAREQgWIR
kIgqFtla8v3www/t7bffttNOO81Gjx4dtmBREgEREAEREAERqD8EJKJKdK0efvhhu/vuu8NGwW+8
8UaJaqFiRUAEREAEREAEciUgEZUruTzPe+CBB2zQoEHBGvXtt9/mmZtOFwEREAEREAERqGsCElF1
Tfzf8oYMGWIIqXHjxtk777xTolqoWBEQAREQAREQgVwJSETlSi7P8x566CHr37+/LbroovbEE0/k
mZtOFwEREAEREAERqGsCElF1Tfzf8h599FHr27evbb/99nbhhReWqBYqVgREQAREQAREIFcCElG5
ksvzvCeffNJ69+5te++9t51//vl55qbTRUAEREAEREAE6pqARFRdE/+3vBdeeMF69uxpRx99tB13
3HElqoWKFQEREAEREAERyJWARFSu5PI876WXXgpWqBtvvNH22muvPHPT6SIgAiIgAiIgAnVNQCKq
ron/W97IkSODP9TQoUNt0003LVEtVKwIiIAIiIAIiECuBCSiciWX53ljxowJe+a9++67tvLKK+eZ
m04XAREQAREQARGoawISUXVN/N/yiA/Vrl07mzJlijVt2rREtVCxIiACIiACIiACuRKQiMqVXJ7n
IaJWX311mzVrVp456XQREAEREAEREIFSEJCIKgX1/yvzrbfeso033tj++uuvEtVAxYqACIiACIiA
CORDQCIqH3p5nPv8889bp06dJKLyYKhTRUAEREAERKCUBCSiSkT/sccesz333FMiqkT8VawIiIAI
iIAI5EtAIipfgjWcP2PGDPvll19sySWXnOOom2++2bp37x58ouaaa67w/eWXXx4Cb84///xFrJWy
FgEREAEREAERKAQBiahCUKwhD/ye9ttvP9t8882tQ4cOVUdecMEFIdDmxx9/bAsssID9888/1qhR
I7vlllts5syZIZK5kgiIgAiIgAiIQPkSkIgq8rVhjzwEEwJpxIgRVaX16tXLbr31Vvviiy+sefPm
NnnyZGvbtq2tuOKKdt1119n6669f5JopexEQAREQAREQgXwISETlQy/luWuvvbZNnDjRRo0aZcss
s0w4q0uXLvbss8+GYJvLLrusjR8/3nbccUebNm1aOFZJBERABERABESgvAlIRNXB9XnggQfszDPP
DD5QvXv3DiV269bNnn76aWMj4lVXXdXYBuaAAw4IW8EwzackAiIgAiIgAiJQ3gQkouro+jA9h6P5
+++/H0pcY4017M8//7T77rvP1lprLXvuuefsyCOPDAIKi5SSCIiACIiACIhAeROQiKqj63PnnXfa
GWecYcOHDw+Wp5YtW9oWW2xhp556qq233np20UUX2fnnn2+///57HdVIxYiACIiACIiACORDQCIq
H3pZntusWTPr3Lmz3XbbbTb33HNbx44d7ayzzrKtttoqvJ86daq98847Weaqw0VABERABERABEpB
QCKqDqkzVXfMMcfYDz/8YK1bt7YNNtjAevbsGabvWKFHjKhzzz23DmukokRABERABERABHIlIBGV
K7kcz1t44YWDkJowYULwiTrooIOCdWq++eazzz77LKzUUxIBERABERABESh/AhJRdXyNmL67/fbb
bYUVVrBWrVrZzjvvbE2aNAli6tdff63j2qg4ERABERABERCBXAlIROVKLo/z5p13Xlt33XWNaOY4
lT/00EP2ySefVK3cyyNrnSoCIiACIiACIlBHBCSi6gh0XAyr8saMGROsT+3atQur9g4++GC7+uqr
S1AbFSkCIiACIiACIpALAYmoXKjlec6AAQOsR48eQTjhI0WsqCuuuMK6du2aZ846XQREQAREQARE
oK4ISETVFemonLPPPtvuvfde++2332y55ZYLsaH69+9v2267bQlqoyJFQAREQAREQARyISARlQu1
PM858cQT7dtvv7WhQ4faP//8Y+uss07YpHjzzTfPM2edLgIiIAIiIAIiUFcEJKLqinRUzksvvWTT
p0+33Xff3eaZZx5r3769XXPNNSFulJIIiIAIiIAIiED9ICARVaLr9NNPP4XVeYQ3+P777+3JJ58M
e+gpiYAIiIAIiIAI1A8CElFlcJ3mmmsuGzt2rLVt27YMaqMqiIAIiIAIiIAIpCEgEZWGUpGPIXr5
4osvbk2bNi1yScpeBERABERABESgUAQkogpFUvmIgAiIgAiIgAg0KAI5i6hbbrnFHn/88RBle+bM
mbb00kvblClTrHHjxmH7EjbYXWCBBWyhhRYKztO85zv2iOM9rwUXXDD8z4tVanPPPXd4NWrUqOp9
8n++m3/++e3vv/+u9TjPL5m/f17dX8pgiq224/x7jm3IiWsxa9Ys++uvv8J18f+Tf/nej0m+h98f
f/xRdT77CnJfcRyfkwgJwee8+IwXx/j/3EPTpk0L//M5Lz+Ozz766KMQ3JSwEryWWmqp8D+O/cTr
UhIBERABERCBbAjkJKK23nrr4AS9/PLLB4foH3/80Vq2bGkrr7yyvffee2EjXTqpGTNmBAH1888/
h84M4TR58uTQydE5IqpwsGYblCWXXDIch4BxoUTHjFDB+Zq8ECu8mjVrFgQb7zmWzpr3dKKUR968
J/H5EkssYRMnTqz6jHz53o+J/+ezFVdcMWzD4sf49/Fx8ftVVlklHO/1q+6vC0KvL/XjM0+xGPP3
1B1mJG9r8gLTZpgussgi9ssvv1S1C64uQLyt/CVvvkNkeBv9e64RQoTEZ5TpPLlexLSK8/K6MBWJ
yHHmcR0pDyFLeZkEp9cJpt4WZ+Ms+dzzXnTRRUNZfq84V8Q1efGXzziHdvKi/C+++CLcS1OnTg1T
p9SHz7necD766KNtk002yeb3o2NFQAREQAQaMIGsRRQdDfGMPvzwQxs/fnyIur3rrrvmjJBOj46Z
Jf903oglXnT+/j+dq1sh+JyO1f+nI6VTdGGGRYHVbm4RocP94YcfgqWEF98j3Px/BBkixcUE1gli
OHnifwRYnBATLur4HAFJmbF44rxJkyZViQYXc5TtVi7+LrbYYkEQ0unHn8fvXVC4mIyP5T0WPbi4
Bc0teYgJ2hlb1Vx4Jq1+LkgQHC7YOIb//Xzee94IFN7z17/3eibr598n65cUQf6/H5fzTZXyxEce
ecSeeuopGzVqVNiC56233gqC6vzzz0+Zgw4TAREQARFoyASyElGDBw+2xx57zNZYY40gWs4555yG
zE5trxACiKiTTjrJbrvtNrvjjjuChfS0006rkNapGSIgAiIgAsUikJWIYuNcVpGtv/76dvrppxer
TspXBEpCYKeddrKzzjrLBg0aFKaqJaRyvwxYQFl1+sEHHwSWROVXEgERyJ9Av379bMSIEfbwww+H
mQDSyy+/bD179rQnnngiuNKUU2KmCbcJn+Uop7oVoi6pRRR+ThtttJGdcMIJdsYZZxSibOUhAmVF
gCnl5s2bh2nkffbZxy666CLD300pHQGmlJ9//nm7//777aGHHgrT7J7cjy5dTjpKBESgOgJ77713
+H3hQoIvJ+m6666z4447znBR2GOPPcoG3jvvvGPrrbeetWjRwm688Ubr3Llz2dStUBVJLaJuvvlm
O+aYY8KDEedjJRGoRAJM53355ZfBT40RHfscKtVMgIUHd955p7Gx9tdff1118LLLLmsHHHCA7b//
/rJE6SYSgQIR2HPPPYNYwrCBDyfp2muvDZYorOhdu3YtUEn5Z8PzILaMDRw4MPhRV1JKLaJQk23a
tLG77rqrktqvtojAbASYhsLsjHn89ttvN0J5KFVPAKtdx44dg1O+J6zVXbp0CdP+DT38RynvndGj
RxuWgEMOOaRip1JKybdUZWNpevTRR8PCrlVXXTVUg71Xjz/++ODXedhhh5WqahnLZeX6qaeeGoQf
CWs1K/wrJaUWUVif7rnnnoo0x1XKxVQ7CkPgzDPPDM7lmMzphJSqJ4Dlzh/aO+64Y3iYE+qkWAnR
xrWpq1TX5RWqXdSb1bwkwnlsv/32tvbaa4eplW222aZkouruu+8OfjsMxlmFW9fJw7fUxT1EyB5W
kRfaR2mXXXYJoYWw8iyzzDIB4eWXX24nn3yy3XvvvbbffvvVNdZay8NafeCBB4apfqb28Jesi2tQ
a8UKcEAqEfXpp58GKxQr8pREoNIJ8IC67LLLQvwz4p4pVU8AS123bt3CATfddJN17969oLi4Bgi1
V199NYgCRuC33npr8FkrRqrr8orRBvKkAyd8SqaEqMJ/BgsVQZHrMrkV5cUXX7Qtt9yyKEUT0gZr
B2UlXU8222yz8JsmZhzhbYqZWPHbv3//EFKnkGUhgl944YXZ8r3wwgutT58+IQA2IqscUzy199xz
z9m2225bjtXMuk6pRNQVV1xhffv2DT9MJRFoCAQ6dOgQgna+9tprDaG5Obcx2Vkz0iyUwHnppZds
3333DQ60cWL6cPjw4TnXuboT67q8gjfg3wyZkqZTZaUpUzzcy+wcwWCYuGgIGE9cK0RpXe3budtu
u4WOHisvvj3FSO4zlLwXEcisLid99913IcBzMROrey+55BLjvmJle6ESQpBBBbEKeUaRzj333BBy
CHG11VZbFaqoguZDvEV2NiFVkm9UKhGFomd7F36ESiLQEAjga4BjdDE660rixxQ/zuOe6IyJmp+v
LxQ+VhtssEHIdtNNN7UePXrYAw88EDpgUqE7i7our5j3AKLTBQIC6fDDD5+tOKZSsJAw9UpaffXV
7ZVXXimotSRT+xB3WFEQcVxTnKKpC4uVsJox1eedbD58jjzyyCAMr7/++rALgadvvvkm/KZJzKp4
eIB8yqrpXBhjjcp0DfIpk98F92u84pWQQxdffLGNHDnSNtxww3yyL9q5BDR2n2p8TgnaXQkplYji
xuOG+/zzzyuhzWqDCNRKAF8DRnmsgFGqngCWIsRNnAhemk9cKEIl4FeF+X/33Xe3Bx98sGo7INwK
uCZMR7kIyPf6FKK8//3vf8GRHqf68847L1WVmPpkepLppUJaRehc2QIKcUKYjurinfnycyp75ZVX
Wq9evVLVu7qD8DfCmZ3E9kkIaTr1Sy+9NOz6wPvqEn4yQ4cOtXXXXTevOnAyq0S5BqxYO/bYY6vy
Y+9MBONKK61UUIMAQvDjjz8Oe3DGItDDDrADAlNthUpsuUaZ7FHrCX8o/KIwdlCPckuEj3EfqNVW
W834vVRKSiWiCEKI2f7111+vlHarHSJQIwFioq2wwgrBUVOpegI+ZZE8AufhnXfeOSd0rIrEerLm
mmuGZ07sgNq7d2/DvQAndqamCpEKUR7TK0yzYJXDopIm4eyNbwidO+KwkAlfJ1Zv0ZEjqhCiWCso
k0SnhoBjFSUpV382RBO7WOCDRABITzfccIMdddRRwT8HH8NkQiwR+oKpRnbA8HhHhWDASjACUnJd
Dz300KossX7gh8U2ZdQ514R4wSLKtUP4+XQzVlj8n9zC5SKKaTaEHQlr3DPPPBMcrEkDBgyYw8mf
QQLWOgJUMnXt1jOvrzuqf/XVV1VNQJAThigOe5Br+wp9Htuoca3j+2O77bYLU8xMvZZTSIZc2p5K
RDGdR+wcRphKIhATwFqAiZ54Sjw0KyVhMscawnSVUvUEWHXD1Bp7VWJRcasHpntiR+WS4E5nQGfj
nb7n88YbbxjBBok1c8EFF+SS/Rzn5FMeViwiMrO0HGsAwg/LA/tZshrOfXDiQpnuxEq08cYbB2sb
1iKsC1ijOCfelDzXBtLRkjfXAGuMBz5136c4ECqCFB8l6vzf//7X6JzxsSHSfJy41lhAmOrmPQKJ
axQnrDzsV4rQRbCwKAC/LAQ1g3HiGCE+chVtaXhwb1DOsGHDwrPJk4sa2kY7PTG1h/DFdwlrGlYx
hFby3uP4Z5991jp16jRbNWAKb4Qh5SbLQ0QdccQR4VogLuNYavxmEJEkfJwIZM00YJyoK3X2xP6v
lMf+tZ5YkYcwiwNwpmFVF8e0a9fOxo4dm7EoWLPHbH1OqUQUahFzJabC+px4cDA6w6kQyxoPOH4o
hXho1Wcu+dSdOW46TDqPd999N5+syupcOhCcYJkSUEpHgOkahAEJSwCiItvEqJWp1OSoPtt80h6f
T3nu81JdWbSBTs1XiPHMIcRATVPETFEyVZlvQpBRNp06HX/cuXveTG3hs4PVj6m3eJFApsjXLkLw
x2HpfuzAfPXVV4cFBWzGXlNCYOLwzupXrIrFSO4zRD3hjSWO4LmIbwR/vIINQYuRIHa2p05cOwRg
0vkdB3G3qGCtph34IGXyr3Je5BWLVqazmHqDn4ehQIxTP/f5I44SViuvVxwTimtF2fHMEAIVqxiC
vtxCByD64vbH17yQFuVi3Etp8kwlonDUw+SMybo+Jcyub775ZrjZGP3E5kRvB9YTRgelSPgkMMLg
wdmqVatSVCHvMhklsXKz0H4GeVcszwxwdGV0V6p7I8/q1/npBNRjJM7Dkk6CextzfbYJgYFliA4+
Hmlnm0/a4/Mpjw70lFNOmaMofKNmzpwZrAVMo7mIwsqByEh2KIzG+f3wvMKXZ6+99kpb/WqP846L
VVDE5yFf99XyBRPJLY1iEYzFiensOLmAQJAxPUNH789U6o9lEB+5mgalLjyZ3irGBvYuiqk37XSr
X9yOcePGhdAO8EbIMMPCPctKOsQJ966HCWAxFW3zhFBBsHhCgNKWpNWO711E+bFcZ64B5yT3kfPn
KIKLaWqmhhFElI0YdlGL2MJXE2vY008/XVUPvzYIr3wXdeR98yUycFGLIzmikPuf64IxAyuVC8lC
l1tX+aUSUfyomfuuD062jKYQJYy+Mok+bkrM0czBI7B4YBfKtyLbi+ZRZvlhMTorZOIhjjkbXwWu
HdOxSy21VBgt5utAGtfTHYv58ceOjoVsSyny4r5gWsB9GUpRh/pSJs8FLFA87OkomHJLdsBp28ID
FgFAYlop6Q+SNp+0x+VTHlNaTMdQXwaZWC5rs8jSpsmTJ4ffIr8dREgxYvt4R4rPjcfxYsNaF2iI
VPzWfNsQeNEpYxnINMVCqA9W1MXXhfYPHjw4OE37FBXtZ1CFCMkkprBQ4rNEQFuOK3Qi8CsWpJqS
W2vcdwrxz3VwCw7Tj75oAX+dpBWPAQPP7PhzrGpY9WLH8jiGGvVJCh+vI8/meBCNoKNOWM3c38oD
ayI+mC7lOe5+VeSDbxmzReX4DIYVz1H6XtiVm8jL9x5MJaIwd2IaZYlouSd3PPV6cuG44Xg48KDH
Wc8TDwGUfanMnz4q40d71VVX5YWW68MDjbbwQEdAVWdC/eCDD8IIoBApnu+upE1mGSni31OMB30h
uJdTHh63hjoxis93hRXhDOj8+e1iyUm70o+OhhfWhGxSruXFZbgA4bO0vwMfoSdXkcX55tomt0Ql
B2hY9xB7CF8GPlhWXBwhJLBo8Dmr6dxCQPBKHJzdr4UBWvwc5X+EC6vwfKCNSOOZlgyo6Hu84UOJ
3xSJfLlm+CXhi0RC6OAIvsMOO2TV6XqHTR44L+OuwTOK6UdEazzYc184RIw7a+OyghCMU3WrTWGJ
9SoWUzzLidEFO3d1QJS6GII3bYqTRxuHMcfF/kMMIti41xdp+JRrchoMnzoEfTlaohg4uKWukoJs
+jVMJaKIbMuohWBl5Z64oX2DQ5we+SGVq/L1Hzw/FEYpmI5Z3cEPHVN3NhFdPTZKfH0wudOhYXlj
hITjJKMvRixJU34u1xVnYvcFqLTpPJaII6JY0aRUPYE49g5xav7zn//kjYvRNp25R4vnnsXvjhE6
0zWUyZYhOOR6R0/HQ2eZi6NqLuUlG4m1l98a5dNpxCKjOiD4wODQXZ2TdT5twjJB549Dc3L/Rzpi
ePqqOcQTQhi/ITo7Bl8IDqbn4M10YOwM7cZLHj8AACAASURBVDF+EIs+HUobGZTed999wWnbxRQD
O18ByDG0l3bHlhSfFnV/MPJl2hNB4VNvaW8qRDd5J59HHjsrvj/cbwyx07lz52ARxGpH+xEpODzD
EEGISHahBQtmMjzQJc9txBSr40gIQhenXEMEI6KQgQGJ6039mErkPvYo7gx8+YzrgUCjftQjHuS7
iEpaPF1E0UfHkeoRtwywCb3h++xhVWQhBP2D9zGs1sRKiCDm98bzj5TvsX7dPAAqYhAtUUkplYhi
DpiRiccAKWcAjDgQIeU4vcQcMDcoD1l+XMlIzM6VujNKQxilTbEJGnHG//5DiPNgpFIoR3pnTf7F
iiKdtv2FPA5xSCeIP1ShtzEpZD3LIS/uAQQ6HQ8P6uTKolzrSGfBSiVG4dWleEoIQcAUEkIml/0O
sy0vU50QHEy1pLVs02HxDKhub7V82uQdM0v8WeqfTNzjXC8sQ7Hg8HAPyeOxVtE26oRPDwEkmbZF
MBDWAfHsFhzEFBZc98Hi3nD/OJ8WdCsYAzqeVb7oh44+dnBH2GV6jlV3T/gUWvI+YAUev+lYRCFu
iI+VTDBD8GCBw2kc0cR5DNCxbNEfYrHCBYPpPr/etAUxyjVlitNXjxJHDesfA+XYgd2tMu7PlCae
VDxwjaOue7iMeEEA4VlcwCISmc4l1qNP4caLNwhK6r81t4zmeyz5+V6a/CbhUmkxorh3Uoko36sn
rZk61wdnIc6LO/a09WVky0gCxc70HheaEVwmSxA/KEYVPPjSPCx5oDBPzegAYZRpRQo/UKYUcEgl
UBr+JNlaz3zpLSNIRoO5pri+teURb6OAxQYzdiUkHlRM5yEICuk/VglsMrUhnkKhQ6RzybS0P5f2
40PBqBmLAB0wnS2dNSN0fFD47ZDcv7A60ZC27LTlpc0vn+PyaZNPmw0ZMiQELM2UGFD17NkzdOyx
Ez8WEaxDWPIRT4gknof83rFK8exjuT6s3LpB/lhsWFmJYKHTdHeCeNk9n3FM0tUgDjsQW/WyXf6O
uKHODICoa5w87AO/bwaSCDQGSR4sFlHBM+yYY46pGmjSRqxDPPddAMSCg3O4HxGJPjimTAbLcGRa
FbGExZ42MzDwFb8uohByCDoSPqw47CcTwhIWxBPzcAZY0LyNWLdYJIUlzS1efg+QF/cA94Kz5TPq
zjXlWeeWIj73wKv5HsvUbDIERjyNm89vo5zOTSWi6JgJTsZUUxrhUMoGxiIKQcQNwqoYpgb4YWMB
wqqGIx8PCgQOoymWkCYTNyXH8KNDZPHgiM3aPLBZjozpnMRxjD5YhcAPj5uQ+W8eIqzUoBwe/phe
uakxA9NRY1bNNx6R+zPwUOAHhYDE9wlxxYiRFYpedx52/KB8RU119eVh4gmumMppU9u2bcMIBzHp
u4iTf7a+KKW8T2oqm86FaQ2EYRzxuFzrW+p6cd8zCMA64YnfBYOG5CqkfOuKyM+0nNwdivn90VEV
KlVXXqHyrymffNtE3KHkBryZysunjTxPEUCxk7OXwfMFgZ0UM+4rxHFYSOj4eS56YgqKtiMmEBWF
SjzPEFfJwTVCAqtgdVvOwIdFSMTwov+jX8Fix7RlptkE+kue92w6TFnJ+5VVkDxjiOpOQnQi/BjE
k3CfwXBB3C74Mv3l3zGYYKqTKVWO8cEK9aePZorbA7eyyTJuIdSfWGS4jXAcTt7ki9DDckbC1QMf
Ntw8sCIyVZnvsYhILJRYAOlnEVCI8WwNBIW6/sXKJ5WIQiQwd8sqtkKNMIvVoFhEobSZu860qpAf
+Ntvvx1+VB6Snx8FAoPj2XcJ0cGNzmgk/rFgKo4Dj3pkXPcPYWTCDYRVKT4vuZu3R9AtxDwx1ifE
GCkZl8RZ8zk/TOqEqZXpD35YtdUXHjzkYqFJnRmx+EjUR3fFuq51nS8/9EraJLPY/OgUGNHzG+I+
4feFiOd+q4vkEboLuQFyXdS7pjLqU5uY+uK6Yy3B+sJzlw69OtcBOlX6lEzL2901AdGDGClUwlLE
oNUd2vPNF/FD38BgGLGEaOKa5RJ9nQEpFq5M8by8nvy2ECXlbsjIl2t9Oz+ViMJhE3MiCjpTPIxy
anQsouJ6YYrFTwBHc9rDEmOSr9BIRrHF0Q4nSAQSS01JCCycD+kgsG7xnQfGowMhb/wGECvMO2P9
4lgeMJhy2cwW3yFPiDim8BiFsAFoPglLWXKPLAQSo0DEEkLJl47ju4HTIqxqqy8jFYQkIyF3eEeE
MR/PiIhySfBKM+rNp411eS6jR0ZmskRlT51nBR1KXSUEHB0yKY4AXVflF6OcSmxTWk5Y75kGSm4g
nPb8+nwcK6uxKDFwRYDSj7CKEyt/JT1f6/M1StY9lYhivpRpHG5sxEg5p1hEMZeP0x5Wk0zxZmIn
PaxImcy5mEMRWPhesFIk2Tm48x4CCusOoswTooMo3qzsYFTFKAhnTk8e3C4ZfTYXvoxQWGLM9cE6
xP8IoJpMp/HKGsrMVF+WlyP8+G7MmDFVgeeS52baoiOXdpTLOVxvfHvwGVEqbwL4tvjvEutApum+
8m7BnLWrxDalvQa+spApNAaZSiJQzgRSiSg6ZZzycFTDGlPOKRZRtYXAJ+idm16xFmWaqkRAIaSq
My2zrBU/JEQU8/++7QWMEEms7mDHauapk5uTuuNeHJ2ZToBjCYqHKEqbPOgl/k+MXNKkOEJxdfXF
fwtBFsey4gHPapM4Anzs0Jim7HI/BpM5q2VwXlYqbwJYbXhG4YeYXM5f3jWvvnaV2Ka014JpLXw5
eW5WgiBO224dVz8JpBZRzPkylYVTcTmnWEQxbeXTdpnqjM+TLy+uLnYS1iV+1AgdVgf5clt3tPbl
ufiLeUA3yop3EHeLVzKGDVNi1A8rD7FqsBr5smFfkpqWtQfuo65M2yEg8cHCDwA/BYQPiSk4hBG+
BljIEF811ZfVhIgonBCZusNZkSW+OCZi3cP3yx0ZaYNPGaatd7keRztwUE5OkZZrfRt6vXCCpcP1
ab1K4FGJbUpzXXCERkSmibWVJj8dIwLFJJBKROFLxIoEfETiJa3FrFiuecciimW7NVnO2B/K90VC
BMUrRLx8/DtYyYdPE2KHKTKm/jwQIMf5UlOf2mN6DsEVT6UxSmYpMXPeLjp4WPjqJYLS4Z/Epq0I
FFYCEhAvbfLlu2mOp82sxsAPi1V2NdWXkb3Hq4IlosxZcD6+Vu4IyrGsvqiEBE/arW1fKuFqqg0i
IAIiUBwCqUQUqyywmiAcarLsFKeK2eWKxYxlmvjsMF3XvHnzajPAWkN7EAU1TYPhVI1/TBzzAqsS
8ToIg+BCjdET1hocuWEWJyw2TPklHV/diTI+Fh8klvZmExTTp/M8H+pE3tQDPykcyZmujAPXpakv
oQtYchuvzGPpMYLJg7Zh5WJVCiEf3NE8u6tWfkdjsaPdldKe8iOsGomACIhA/SeQSkTh14NVhY69
Puy4zLJTzPrx5prVXSqWYeMblCY6OOZ1pshYJZHL6qNM8VgQVVi3EHJYhLDksG1NtqZs8kYUIh6x
NGUT5bc6Nl5f4s2wshBrJKszM+1lhpCCOda6SkgEPMUvjX2tlERABERABEQgE4FUIgqLxquvvlrt
hrZCmx8BxAnTkPGeR/nlqLPzJUBgPURtTduO5FuGzhcBERABEajfBFKJKLY/IS4Sfj5KItAQCBAo
lanQfCPJNwRWaqMIiIAINFQCqUQUvjxMY+WysWdDBat2128C6623XtjS5tFHH63fDVHtRUAEREAE
ikYglYiiM2EVGbs6K4lAQyCA7xeLFFiNqCQCIiACIiACmQikElFsHMhO6sQBUhKBhkCAcBMsNmAD
aiUREAEREAERyFlEET2WXbXZSw5nWyURqGQC7GnYqVOnEIxU205U8pVW20RABEQgPwKpLFFEqd57
771DNGrCHCiJQCUT2H///e39998PK1KxSCmJgAiIgAiIQM6WKE5kRE5gSrbB2GSTTURTBCqSAEFl
iS5PPDQsUkoiIAIiIAIiUB2BVJYoTr7mmmvs+++/t4EDB9qXX34poiJQkQTYSJnNqAlv0Ldv34ps
oxolAiIgAiJQGAKpRRTFsZ/YscceG6KXsymtkghUEgH2UmT7HGJEcZ8T5kBJBERABERABPK2RJHB
119/HbYkYfk3m+hqh3vdWJVEYPPNN7c999zThg4daiymUBIBERABERCBmghkZYkio3fffdf69esX
NvZlpV6XLl1EWATqPQE2VGaQgDWK0AYIKiUREAEREAERKKiIIrMxY8aEaQ+cb9mMlhhSStkRgOHf
f/9tHTp0yO5EHV1wAldeeaW9+eabtuyyy4Z7+uyzzy54GcpQBERABESg8ghkbYmKEbA5a58+fWzB
BRe0jh072oABA6xx48aVR6kILTrvvPNs+vTptsEGG1jnzp2LUIKyrI3AxIkTrXv37rbTTjsFCyvO
5PhCKYmACIiACIhAGgJ5iSgvYPDgwWElE8vD2SpjkUUWsRVXXNHmnnvuOV6NGjUKjun85Xv/Gx/L
Z1gEZs6cmTEPP7amYyiDGD9Tp04N5ZGSf+eZZ55gDcqUiIn166+/Fuw72hSXNWzYMJsyZYpNnjzZ
iAiPoEomxGnyc7bf+eOPPwJnEn95Zapv06ZNQ/vjtNBCC9lvv/0222dcL+riefEXMcym056S+dOe
P//8M5wza9as0DY+87rxGdfJj6HeM2bMqDqeunmZHDv//PPb77//HvKibNh73nE+fEeb+A4+nMP7
+eabryp/rvNff/1VdT7/U7/x48dbq1atglh64YUXwn2K9Ynzmb475ZRT0vxmdIwIiIAIiIAI/D9d
8X8dyP/rjQuQED1nnnmm3XvvvbbKKquEjovs+Uvn6K9Mn8Xf856Ojw44Pid5DFWOO8tkGZ5PLNDI
F0FA5+uiKoD4V2g5BgSBn++f+TH+XfI8F4culmLRxnva7Z9RPnUn4V9GWXF+HMfniKxYMHGMix1/
z1/a6Pn59+RBvvHx8fnxpffj4jxjUZXpPG8LCw2++eab0Dbq4X/9vXPxevI/osp5uJj27/nORZhf
O87hhViCL58jvGiz5+ef811cFmKZsgjNgbAmf+4txBQr8XAmX2mllQrwC1AWIiACIiACDYlAQUVU
OYKjY6Wj5eXv+esCL2nRSfN/mmOSoiN5ztVXX22fffaZtWjRIoSLyJSni7VYjMQiJRYtSQFTF9+V
4/VWnURABERABESgrghUvIiqK5DZlnPyySfbhx9+aFtuuaVCRWQLT8eLgAiIgAiIQBkQkIgq0UXo
1atXWBHGcvojjjiiRLVQsSIgAiIgAiIgArkSkIjKlVye5x1zzDH28ssvh5hbO+64Y5656XQREAER
EAEREIG6JiARVdfE/y0PB/xBgwbZY489ZmuttVaJaqFiRUAEREAEREAEciUgEZUruTzPO+SQQ+z5
55+30aNH2xJLLJFnbjpdBERABERABESgrglIRNU18X/L23///e3BBx+sCktQomqoWBEQAREQAREQ
gRwJSETlCC7f0/CDGjVqlE2aNCnfrHS+CIiACIiACIhACQhIRJUAOkVuttlm9tNPP9nYsWNLVAMV
KwIiIAIiIAIikA8Biah86OVx7tprrx2iZ7/44ot55KJTRUAEREAEREAESkVAIqpE5NdZZx1r3bp1
2CJHSQREQAREQAREoP4RkIgq0TVbYYUVDOfyiy++uEQ1ULEiIAIiIAIiIAL5EJCIyodeHucutthi
Yc88XkoiIAIiIAIiIAL1j4BEVImuWZMmTeymm26yrl27lqgGKlYEREAEREAERCAfAhJR+dDL49x5
553Xhg0bFjYgVhIBERABERABEah/BCSiinjN8Hdac801baeddpqtlFmzZlmjRo3s448/tlVWWWW2
73788Ue74447rHfv3kWsmbIWAREQAREQARHIl4BEVL4Eazj/888/t912283ee++92Y764osvrE2b
NjZ+/HhbbrnlZvvu0Ucftdtvv92GDBlSxJopaxEQAREQAREQgXwJSETlS7Ca8x944AHjNX36dOvR
o4ftsssuVUeOHDnSttpqK5swYYK1bNlythzat29vXbp0sT59+hSpZspWBERABERABESgEAQkogpB
sZo8CGNwwQUX2LPPPmsDBw6sOorYUGxA/N1331mzZs2qPscKheC65ZZbZhNdRayishYBERABERAB
EciRgERUjuDSnHbRRRfZ1KlT7ZprrrGJEyfaQgstFE7r169fsDRNmTLFGjduXJVVz549w6bE48aN
s0UWWSRNETpGBERABERABESgRAQkoooIftq0abb66qtbp06dbKONNrLDDjsslIZYuv76623mzJk2
zzzzhM/+/vtvm3/++W2ttdayd955p4i1UtYiIAIiIAIiIAKFICARVQiKNeTBtN0SSywRNhp+6qmn
wpG77767PfHEE0E4eRo8eLDdeOONtv3229uZZ55Z5FopexEQAREQAREQgXwJSETlS7CW8994440w
dffKK6/YL7/8EqxN7JuHBeqtt96qOnvbbbcNU374Q2288cZFrpWyFwEREAEREAERyJeARFS+BFOc
36FDh7DZ8D777GOdO3e2ZZZZxn777bcgqkjff/+9bbfdduFzt1alyFaHiIAIiIAIiIAIlJCARFQd
wCfu05133mktWrQIfxdeeOHgOI54Il111VX2yCOPBH8o3iuJgAiIgAiIgAiUPwGJqDq6Rs2bNw/C
iXAHWJ3+/PNP+/rrr0Pp++67r3344YchyOYGG2xQRzVSMSIgAiIgAiIgAvkQkIjKh14W55566qn2
5JNP2v77729Dhw61SZMm2aeffmrffPONMd2HlSoZ2TyL7HWoCIiACIiACIhAHROQiKoj4F999VXY
AmaBBRYIUcqJBfXRRx/ZbbfdFpzJsUadcMIJdVQbFSMCIiACIiACIpAvAYmofAlmcT6hDV5//XXb
c889w8o84kER0oC99EaNGmVNmjTJIjcdKgIiIAIiIAIiUEoCElF1SP/FF1+0XXfd1XbccUf77LPP
gqBacMEFwxYwt956ax3WREWJgAiIgAiIgAjkS0AiKl+CWZ6PaCKUAQE4Cap5wAEH2IgRI2zNNdfM
MicdLgIiIAIiIAIiUEoCElF1TH/ppZe26dOnW9u2bW3ZZZe1CRMmzBZ0s46ro+JEQAREQAREQARy
JFAUEfXXX3/ZrFmzbL755suxWpV7GmEO5p57blthhRXsyy+/tIsvvti6detWuQ0uo5axlyGO/fBX
EgEREAEREIF8CeQtosaPH29PP/204e+DKCDe0YwZM6rq5R0Wf3k1atQo/GXbE7ZAIfEewcV3/p7v
+H/eeecNHR+f857PecXvOZcXnyff+/H+l7w4l+OYWvvnn39Cfeaaa66s/qY9h/ZRBvn/+uuv1qZN
m7AZ8bBhw8JnP/30U/ge0cnL33Mee+vx8u/8e0Sqf+7HcDwbGvNd/OJzrgfH+XnEqIInFjH/zP9y
HN/9/vvvVflQrp8PR9rh5cd1gSftIf9kPfif64mQ8TrHbfAyMrXZ288143xnxN/4PdcVBs48/hv/
UBZffPGw9c5ee+1lPXr0yPc3pPNFQAREQAQaKIGcRRRO0RdeeGGYjqLj+vbbb+3ggw8OUbdZyk9H
9fPPP4etTaZMmRI63qlTp4btTvwvnSOdrnfmHEOHz4sO88cffwwdMh03x9ER8z8Rv4n2HQsA72ix
9HCed67NmjWzyZMnh/95ca5vt8I1Z0UcgsETQoD6xAmx44k8qNsff/wx2zGIKupQqITg8PwQB7Sb
RF2oQ3UCwY/xOsd/4/cubv2z+H9ElAs/vveXi9/4OxfHiy66aBU3zs/0oh0ujOPv+ZyXC2gXuf55
LIxdfLto9mO5RxDI/nksmvmcF58h9AcNGhREP/sacj9uuummdsopp4SNoZVEQAREQAREIC2BnEQU
4unxxx8PwmmrrbYK01F0RPU5uciiDW7xcbGSFEcIh6TIiKeIXHQkeTzzzDPWv3//YP1AcNJpsw1M
bIGKLStxPVysxBaw+LP6zL6UdSdW19VXX20DBgwIU6yXXnppsFApiYAIiIAIiEBtBLIWUTfddJNd
d911YUrqmmuuqZqSq60gfW8hjAEWPDptrGNLLbVUsMAolZ4A1s8zzjjDhg8fbl26dDEizCuJgAiI
gAiIQE0EshJRl112mfXr188GDhxoO+ywg8hmSeCiiy4KFiw6a6XyJHDEEUeEqeKmTZva4MGDy7OS
qpUIiIAIiEBZEEgtonAY32WXXez000+37t27l0XlVQkRKAaBgw46yJZccskQz+vEE08sRhHKUwRE
QAREoAIIpBZRXbt2DVNRbJqrJAKVTODBBx8MvmojR44MViklERABERABEchEILWIWn755W2fffax
yy+/XCRFoOIJ7LzzzmFFX69evWyLLbao+PaqgSIgAiIgAtkTSCWiCFXA9MbDDz8cpvSURKDSCey3
335hf8OzzjorhOxQEgEREAEREIEkgVQiasyYMbbddtvZ6NGjw1YlSiJQ6QTuuusuu/HGG4MlCgus
kgiIgAiIgAjkJKImTpwYnGx/+OEHa968uSiKQMUTePXVV61Tp07GXwLIKomACIiACIhATiKKoI++
ZQcRvZVEoNIJECGfAQPR+LUHZKVfbbVPBERABHIjkGo6j21QGjduHLZZQUwpiUClE2BrIrYIIgin
7/FY6W1W+0RABERABLIjkEpEsacde9L5NijZFaGjRaD+EWAKm21gmMJGTCmJgAiIgAiIQJJAKhHF
FiUtW7YMliglEWgIBAguu+aaa4bNqhdaaKGG0GS1UQREQAREIEsCqUTUxx9/bK1btw4b5SqJQEMg
MGLEiLAilfAe8gNsCFdcbRQBERCB7AmkElFvv/12CDg4bdq07EvQGSJQDwk8+eSTtuuuuwbr69xz
z10PW6Aqi4AIiIAIFJtAKhH1wgsvGBGccTBXEoGGQOChhx6yfffd1/7++++G0Fy1UQREQAREIAcC
qUTU3Xffbexuz0olJRFoCATYP69Hjx72448/NoTmqo0iIAIiIAI5EEgloq688ko788wz7bfffsuh
CJ0iAvWPwH333WeHHHKIBg7179KpxiIgAiJQZwRSiagLLrjA+vfvb6zSq4TEFM3nn39u88wzj7Vq
1aogTXrnnXfs3HPPtWuuuaZgeRakYsokJwL33nuvdevWzYgXpSQCIiACIiACmQikElFHHXVU2Hz4
+++/r7cUf//9dzv55JONpeusvPK02mqr2fHHHx+mbhBVuSbEE/mcd955YdPa6hKxtuaaa65ciwnn
FSKPvCrQAE5mCrt79+7GfaMkAiIgAiIgAjmLKBxsER+86mP67rvvbLfddrO33nqr2up37NjRBg0a
lPMGy1jqTjrppCCkrrrqqjnKwZ+MOrz77rv2yiuv2Kqrrpo1ykLkkXWhDfQERBTXUj5RDfQGULNF
QAREIAWBVJYodrF/88037YsvvkiRZXkdwtTdxhtvPJuAuuuuu2y//fazP/74I1jYjjnmmDBtg1WK
dhKdPduEBerss88OIoyNaz/99FNj/7WmTZvaOeecYx06dLDFFlssZJtrOcQsyjePbNvVUI+/5557
wnSe/AAb6h2gdouACIhA7QRSiajNN9/cvvrqq+BHVN/SddddZ8cdd1yoNmEaTjzxRNtmm21ma8b/
/ve/EAeL6crdd9/dhgwZUmszsW6deuqpgcvYsWOrnepERF1xxRV25JFHBiFHfZ5//nkbPHiwwTXb
VIg8si2zIR6PT9TBBx8chLaSCIiACIiACGQikEpEYUXBCvLZZ5/VK4qIoiWXXDLU+YwzzrDzzz+/
Wn+kYcOGhQjVpPfff9/at28f3hNs8aOPPrJmzZrNNtWHMOrdu/ccPFq0aBH8q9Zff/2QB/uv5esD
VRN0pgbvvPPOIAwpi/byShtle+TIkTZ69OjQNkTdoosuOltx33zzjV1yySVBACIosKIR7mLbbbet
V/dCtpUlThTWSm11lC05HS8CIiACDYdAahE1ZcqUMEVVnxLWhC5duoQ90Fg9V5vjuIsdfL9WX311
++STT+yggw4yhAZp0003DUIM/6lRo0bZjjvuaGuttVawXsEGv6j999/fmArKNc2cOdPmn3/+qtOf
ffbZYCVbYIEFMmYZW9riAxBF7dq1s4022sj++9//zhF1+8svvwzTmETmjtMTTzwRLHYkhDPnjx8/
fo6yWWxw2WWXWZMmTXJtalmf9/jjjwcfNm26XdaXSZUTAREQgZISSCWi1llnnbARa32zRDF1R4yr
iy66yE477bQaQX/99de23HLLhWOIzP7tt9/ayiuvnPGc2267zQ477LDZvnv55Zdtyy23DAIEIZIp
ke/1118fRNcqq6wSVn5dfvnl1rNnT2vUqFGw7mDxee6558J7rGfUfaWVVrJx48bZvPPOG+oW58FW
PDiyI3SwGiHmktfp5ptvDtOJnjgOYebH4fOGwzt5YEmbOHFiEF0XXnih9enTJ5yGEENYcg7lw4tt
UR577LGS3sDFKpxryHXCJyqtVa9YdVG+IiACIiAC5UkglYjC8oIVhymv+pRYLYd1CCHVq1evGquO
kLn22muDU/jTTz8dVtpxrid8mMaMGWOXXnpp+IhNmRFCnthfkCk8rFVMsWVK+E5hHULcMR342muv
heMJj/Dnn3+GMkk4omNJioXPU089FSxfyTyS5eCjtcsuu9h7770XvsInC8uaC0QsK0zbvfrqq8FC
N3ToUFt66aXDlN66664bzpk0aVIQU4hIRBPxrxBRnhByTHexITV+Q5WYELKIKFjAUEkEREAEREAE
kgRSiyisFFhn6lPCYnLsscfW6iz+6KOP2h577BGahgBC2Gy//fbBIkQi7hOr70gHHnhgcAo/9NBD
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
wvGel4sGfx9/5t/xF/8XBJF39kkLSKb/sbJNmzatSrzEwiTumP1z7/hjIebHJUUlIoKwEosuuqgt
v/zys4nCWDgiBhCvLjixsMRCNLbCsO8fx3FM0kLj/1NHrgnHkC9/ky/a7fv9eV7xMfF5Xj//nu/4
zFd3JvP2urulqLp6JtvpVif++neZznXerLpjpSkDADZiRrQmN6Gu7Yej70VABERABEQgZxEldMUl
gFWkU6dO1rVr1+IWpNxFQAREQAREQARyIiARlRO24p5EQFNWQfbs2TOElFASAREQAREQAREoPwIS
UeV3Taxbt25huumss87SliNleH1UJREQAREQARGAgERUGd4HrHj84IMP7NJLLw1TekoiIAIiIAIi
IALlR0AiqvyuSVghNnz4cLvqqqtsq622KsMaqkoiIAIiIAIiIAISUWV4D+y88842YcIEu/nmm23T
TTctwxqqSiIgAiIgAiIgAhJRZXgPbL/99iFEw2WXXRYCmyqJgAiIgAiIgAiUHwGJqPK7JtaxY0f7
6quv7JFHHrE111yzDGuoKomACIiACIiACEhEleE9sNNOO9nYsWPt6aeftjZt2pRhDVUlERABERAB
ERABiagyvAc23HBD+/rrr4093VZaaaUyrKGqJAIiIAIiIAIiIBFVhvfA+uuvb19++aWxPQnbkiiJ
gAiIgAiIgAiUHwGJqPK7JrbuuuuGzYpHjhxpbPirJAIiIAIiIAIiUH4EJKLK75rY2muvbZ999lmw
RrEJsZIIiIAIiIAIiED5EZCIKr9rElbkjR8/3n7++WdbcMEFy7CGqpIIiIAIiIAIiIBEVBneAziW
v/XWW/bnn39ao0aNyrCGqpIIiIAIiIAIiIBEVBneA6uvvrqNGzfOZs2aVYa1U5VEQAREQAREQAQg
IBFVhvcBsaE+//xzmzFjRhnWTlUSAREQAREQARGQiCrTe2C11VazFi1a2CuvvFKmNVS1REAEREAE
REAEZIkqw3tg5ZVXDk7lP/30UxnWTlUSAREQAREQARGQJaqE9wBxoPr27Rs2GU6mHXfc0UaNGmWT
Jk2a7aunnnrKll566RACQUkEREAEREAERKC0BGSJKiH/Tp06We/evW377befrRatWrWyf/75J8SJ
itMqq6xizzzzjGGpUhIBERABERABESgtAYmoEvFHPHXo0MGeeOIJGzx48Gy1WG655Wy++eazTz/9
tOrz5557zg488ED7/vvvS1RjFSsCIiACIiACIhATkIgq0f1w1lln2fzzzx+m9KZOnRpEk6dlllnG
Fl54Yfvoo4+qPiMAJ87mw4YNK1GNVawIiIAIiIAIiIBEVBncA9OmTQv74p1wwgnWunVrO/jgg6tq
tdRSSxmbED/22GPhM45FVN1+++120EEHlUHtVQUREAEREAEREAFZokp4D/Tq1cvmmmsue+edd2zE
iBFVNVlyySVt+eWXD1HLSXfeeacdeeSRNnny5CCmlERABERABERABEpPQCKqhNfgu+++s3XWWSdM
5SGiEE6kdu3a2SKLLGKvvfZa+J9tYHA0f/PNN0tYWxUtAiIgAiIgAiIQE5CIKvH9cNxxx9m3334b
pu9OP/30UJvmzZuHTYiHDx9uf/31lzG9d+2119p+++1X4tqqeBEQAREQAREQAScgEVXie4HYT5dc
cok1btzYhg4dGmqz2GKL2XrrrWfPPvusDRgwwHr27GkzZ84scU1VvAiIgAiIgAiIgCxRZXYPLL74
4mHl3f3332/t27e3Zs2a2T777BMEFLGh+GzIkCFlVmtVRwREQAREQAQaNgFZosrg+p944ok2btw4
22CDDezcc88N/lDbbrttiGbOZsQ4mDO9pyQCIiACIiACIlA+BCSiyuBajB49OgTSJI0dO9ZWX331
4HC+wAILGEE2k5HLy6DKqoIIiIAIiIAINHgCElFlcgusttpqIdzBww8/HCxSOJETJ+qcc84xnM+V
REAEREAEREAEyouARFSZXA/iQLEpMav0EE6bbLKJYaH68ccfy6SGqoYIiIAIiIAIiEBMQCKqTO6H
e+65xwYNGmRfffWVffLJJ2Eqb4cddjA+VxIBERABERABESg/AhJRZXJNfvjhhxBkc9FFFw0WKaKT
f/HFF7bsssuWSQ1VDREQAREQAREQgaJZov7888+wkgwBQFwj9oRjef7ff/9tc889d/D58VTd+7hy
ROn2VN17vp81a1aI6J3m5cfH52TzvqZjaRPBMf0Y/vqLuiX/53iY+fEXX3xx2JQYZ3LCHNxyyy1V
5xDVfPr06bO1NS7H8+fvggsuaL/99lu1POI2zDPPPPbHH39UHVsdS7abQdzVlhCBU6ZMCYf5Nc50
rRs1ahTK9PuCY5LviZ0FH471F/X197AizTvvvMbn/jd+zzF8Dj9e/M9fjsHax5Tp559/bm3btg3h
JDhWSQREQAREQATSECiIJQrhdPnll9szzzxjK6+8ss2YMSOIiQkTJoQOOptEZ/3rr7/WeErcKbds
2dImTZpU1Wl7x+ydeLIj5/jvv/8+dPDxd/5//DmdOoKE9vCe5H+Tx/M5GwojIJPfxf+7eOAz2orY
8XqwCg/hQHtatWoVhJSf6xaqGAzfkR/CJ04LLbSQ/f7770GkxAnxgLjlPP+O87lWJD7z7xAZCBg/
zs/NJFRjIRa/zyTIaLOLrFhgUr4f7+8J9fDzzz+HOmTKKz6HY5o2bRqEnte5JuHtXLhuTZo0salT
p4a2syqS4KaHHnpoNretjhUBERABEWiABPIWUZdeeqm98cYbwX+H/d/Y323nnXe2jh07htH9Msss
UyU8EFR0zMm/dOJ8xl++52/88s/o8KdNmxa+w7rFK/mea0hesdUn03tECYInKQqSnTWBMBFdyeNc
dPjnHEd+Lt7iv/F7gmoydZfpuFdffTWUhXDo3bt3EJOZBFlssUEwYaGKLTn+ffIvbXbRxneZXp4P
Fhu3IMb5JM/heLfeVJcnn3Pt+MuxLtbi473cuCwEGammfGtrR7LuzhNhTJ1iy9P48ePtjDPOCPcz
cbmefPLJBvhIUJNFQAREQATSEshLRN1999329NNPW58+fWyLLbYIjtGdOnVKW7aOSxBg77zrr78+
1bSZ4BWPACJ3rbXWClHjr7rqquIVpJxFQAREQATqNYGcRdTgwYPt8ccft65du1r//v1t2LBh9RpE
OVT+oYceCla0Ll26lEN1Gnwd2MPwiCOOsH79+jV4FgIgAiIgAiIwJ4GcRBRTQmxLcs0119i1115r
AwcOFFsRqDgCTBXjZ0WsLnzVlERABERABEQgJpCTiLr66qvt008/tRdffDFM4WlfN91UlUqA6PGs
4nv55ZcrtYlqlwiIgAiIQI4EchJR+++/f1jFhJM3G+YqiUClEvAp61GjRoWVp0oiIAIiIAIi4ARy
ElGs3MLxlum8DTfcUDRFoGIJEPqAlZes2jv77LMrtp1qmAiIgAiIQPYEshZRX3/9ddjfjXg///vf
/7IvUWeIQD0j0KZNGyOUxNtvv13Paq7qioAIiIAIFJNA1iLq/ffft7333jss/z7//POLWTflLQJl
QaBv37521113adBQFldDlRABERCB8iGQtYgihg77uT344IO26667lk9LVBMRKBIBQk/su+++Ifio
kgiIgAiIgAg4gaxFFMu+ifLMsm/i6CiJQKUTYCPoFVZYIWz/4/v1VXqb1T4REAEREIHaCWQtotiC
hX3U2P+Mvc2URKDSCbAVz5JLLhkCoWqD4kq/2mqfCIiACKQnkLWIImv2I/vkk09spZVWSl+SjhSB
ekqADba32WabsKch++0piYAIiIAIiAAEchJRdCSvv/66EYhQSQQqncADDzxgxEYjLpqm8yr9aqt9
IiACIpCeQE4iarnllrObb77Zdthhh/Ql6UgRqKcEbrrpJrvooots7Nix2v6lnl5DVVsEREAEikEg
JxG14IIL2u233x5G50oiUOkELrjgghDOY+LEibboootWenOL2r5Zs2bZhAkT7IMPPrDll18+7Hyg
JAIiIAJ1SQDXjGbNmhWkyJxEFIEH+/fvb926dStIJZSJCJQzgdNPP91uvfVW+/DDD22JJZYo56qW
Zd1wyH/++eft/vvvN8JFEAXe0z///FOWdValREAEKpPAddddZ8cdd1zY83fw4MHWrl27vBqak4hi
Vd4555xjJ554Yl6F62QRqA8E/vOf/xhTeh999JEttdRS9aHKZVFHwqHceeedYbscdjrwRJy5Aw44
IFiyZYkqi0ulSohAgyHwyCOP2J577hna27RpUxsxYkTYxi7XlJOIYlXeUUcdZaeeemqu5eo8Eag3
BI499li755577N133zX8AZVqJ4ATfseOHY2VjZ5OOOEE69KlS9g2aq655qo9kwo+Av+62267LUwR
Mxhdb731Kri1NTdt8uTJdsstt9ibb74Z7g92xCj2/UGoHnYhePrpp61Dhw7BMtG4ceMGew0aWsNf
euklO+aYY4KfK0Jq/Pjx1rJly5ww5CSimNI4+uij7bzzzsupUJ0kAvWJwPHHH28vvviiPf7449aq
Vav6VPWS1fWOO+6www47LJS/4447hs3KV1555ZLVp5wKvu++++bwJ/3tt9+sSZMmqas5ffp0e++9
94L4KoewG9SHsDdYHJdZZpkwVZIm0Yadd955NkslU79bb711mtNzOuann34K25a98MILVeczs5Lt
BuPsHYtrC+1Vqn8E2H1ls802CwKK+wF3g1xSTiIKxcYDkhVL9Tl9/vnnYfsapmg22WSTYGWYZ555
6nOTilr3Pn362GuvvRasMrmq9qJWsEiZn3TSSTZw4MCwAfGKK65YpFIqK1ssC+4zyVRo9+7dK6qB
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
BDKJofgzxIz/n0lwJYVYfrXR2SIgAiIgAiIgAkkCElElvifYZLNPnz7BfwwripIIiIAIiIAIiED9
ICARVeLrxN53TDv27ds3bHKrJAIiIAIiIAIiUD8ISESV+DqxmTMiCofmnXbaqcS1UfEiIAIiIAIi
IAJpCUhEpSVVpOO23HLL4Ox+6qmn2m677VakUpStCIiACIiACIhAoQlIRBWaaJb5dezY0RZbbDE7
7LDDbNddd83ybB0uAiIgAiIgAiJQKgISUaUi/2+5WKJYXXfccceFSO9KIiACIiACIiAC9YOARFSJ
rxMiivhIbJmzzz77lLg2Kl4EREAEREAERCAtAYmotKSKdNwWW2wRApIeddRRtu+++xapFGUrAiIg
AiIgAiJQaAISUYUmmmV+rM4j6rZEVJbgdLgIiIAIiIAIlJiARFSJL8Dhhx8e9rA79NBDNZ1X4muh
4kVABERABEQgGwISUdnQKsKxBNtkP7du3brZfvvtV4QSlKUIiIAIiIAIiEAxCEhEFYNqFnluvPHG
YUPc7t27yycqC246VAREQAREQARKTUAiqsRXYMMNN7SmTZtKRJX4Oqh4ERABERABEciWgERUtsQK
fPz6669viyyyiPXo0UM+UQVmq+xEQAREQAREoJgEJKKKSTdF3h06dAgRy5nOU5yoFMB0iAiIgAiI
gAiUCQGJqBJfiHXWWccWX3zxYIlSxPISXwwVLwIiIAIiIAJZEJCIygJWMQ5de+21bbnllrMjjjjC
9thjj2IUoTxFQAREQAREQASKQEAiqghQs8lyzTXXtCWWWCLsnde5c+dsTtWxIiACIiACIiACJSQg
EVVC+BTdvn17a9GihfXq1ct23333EtdGxYuACIiACIiACKQlIBGVllSRjmvXrl0QUSeddJLtuuuu
RSpF2YqACIiACIiACBSagERUoYlmmV/btm2tZcuW1rt3b9tll12yPFuHi4AIiIAIiIAIlIqARFSp
yP9bbuvWrf+/9s4FyqrxDeNvma4SIalJ94jItZKQLlJJ5BIqUm65VigrKROii64oUXRxKVKWUCgi
SokSSZHLSkpEF4pE///vW32z9pw505w5M3POnDPPu1ZLnbP39337951lP+t53/1uq1ixovXp08fa
tGkT59VoehEQAREQAREQgUgJSERFSiqfjqtdu7bxhB4tDlq0aJFPs2hYERABERABERCBvCYgEZXX
RHM4Huk8+kT179/fWrZsmcOzdbgIiIAIiIAIiEC8CEhE5TP5qVOn2qhRo6xv375hm2lWr17dUlNT
LS0tLZMTNWDAAJs/f77Nnj3bdTVXiIAIiIAIiIAIFBwCElEx2IsKFSpY9+7dbeDAgZlmq1q1qmu2
yXfNmzfP8H3x4sWtd+/eNmjQoBisUlOIgAiIgAiIgAjkhIBEVE5oRXlsq1atbNOmTbZixYpMIyCg
+INQatq0afr3kydPdg04d+zYEeWsOk0EREAEREAERCA/CUhE5SfdfWPPmTPHunTpYps3b840W6VK
lQw3avDgwdakSZP072vVquWabw4fPjwGK9QUIiACIiACIiACOSUgEZVTYlEeX6RIEVuyZIk1aNAg
wwj0iKpWrZoNGzbMzjrrLPfdggULrFmzZrZ7925LSUmJckadJgIiIAIiIAIikJ8EJKLyk25g7Dp1
6jhhNHbs2Awz0q2cz3v16mUNGzZ035Heq1+/vs2cOTNGq9M0IiACIiACIiACOSUgEZVTYlEe37Fj
R5s1a5bt2rUrwwg8nUeLgzFjxlijRo1s4sSJNnToUNfyoHPnzlHOptNEQAREQAREQATym4BEVH4T
3jc+bQ7Gjx9vQ4YMsXbt2qXPWq5cOatRo4aNGzfOpfpoZbBz507btm2blShRIkar0zQiIAIiIAIi
IAI5JSARlVNiUR6/aNEi9348XvESTNOVLVvWatasaRMmTLClS5fa4sWLbe/evUZ/KYUIiIAIiIAI
iEDBJSARFaO9+ffff52zRO+nLVu2WKlSpdzMZcqUcSJq0qRJrsUBxeXdunWz9u3bx2hlmkYEREAE
REAERCAaAhJR0VCL8py2bdsaT+NRSE6NFFG6dGknokjxbd261VatWuWezlOIgAiIgAiIgAgUbAIS
UTHcH7qPb9++3datW2fz5s1zM+NO0Q+KNF7Xrl3d99RPKURABERABERABAo2AYmoGO7P3LlzbfTo
0bZs2TJbvXq1eyqPV72sWbPGuVGk+aZPn25169aN4ao0lQiIgAiIgAiIQDQEJKKioRblOXv27HHp
vB49eljlypWd81S0aFFXH9WzZ09bv369TZkyJcrRdZoIiIAIiIAIiEAsCUhExZL2/+fCeaL+acaM
GbZw4UKjk3mxYsWsdevW1qFDB+vUqVOMV6TpREAEREAEREAEoiEgERUNtVycM2LECNuwYYNNmzbN
vQamSpUqRpsD2hrQG0ohAiIgAiIgAiKQGAQkomK8T9Q/UUh+0UUXGS8fJrVH13I+GzlyZIxXo+lE
QAREQAREQASiJSARFS25XJxHDyhe6ZKWlmZr1641aqWWL19u9erVy8WoOlUEREAEREAERCCWBCSi
Ykl731x9+vSx8uXL28CBA9279EqWLOnEVGpqahxWoylFQAREQAREQASiISARFQ21XJ5DLRRpPNoc
0BeKVgcrV650r4RRiIAIiIAIiIAIJAYBiag47VOFChUsJSXFNm7caPPnz7fGjRu7V8IoREAEREAE
REAEEoOARFSc9ol35B188MHGO/XmzJkTp1VoWhEQAREQAREQgWgJSERFS07niYAIiIAIiIAIFGoC
ElGFevt18SIgAiIgAiIgAtESkIiKlpzOEwEREAEREAERKNQEJKIK9fbr4kVABERABERABKIlIBEV
LTmdJwIiIAIiIAIiUKgJSESFbP/7779vt912m7322mt21FFHFeofhy5eBERABERABEQgawISUSFs
Hn/8cbv11ltt1qxZ7v12ChEQAREQAREQAREIR0AiKoTKY4895pyoqVOnuvfbKURABERABERABERA
IiqC38Cjjz5qt99+uz399NPWtWvXCM7QISIgAiIgAiIgAoWRQL46UXTj3rNnj5UoUSJh2A4fPtzu
uusumzZtml1++eW5Xvcnn3ziXjSMOKtatWqux0uGAXgBc7ly5axv375xuRztSVywa1IREAERSDoC
eS6ieA/ciy++aFu2bHF/fvrpJ/vqq6+sSJEiBQ7ef//9Z0WLFs2wroceesj69etns2fPtrZt2+Z6
zd7Zuv/++61///5Zjrd3794CySjXAMIM4H8LO3futFKlSuXHFPsdM9I9ifnCNKEIiIAIiEBCEcgz
EbVr1y5XSzRx4sRMAN577z07++yzCxSYr7/+2lq1amVVqlSx119/3UqXLu3Wh2uUlpZm77zzjjVt
2jTXax45cqTdcccdLkU4evToTOP99ddf1q5dO/vss8/sgw8+sNq1a+d6zoI+gBdRmzZtMl7EHOvI
bk9ivR7NJwIiIAIikJgE8kRE4ehceeWVzoEiECHly5e3W265xf2bl+3SOqAgBS/9bdOmjVtSx44d
7bnnnnN/J8U0ePBg++ijj6xhw4a5XjIO1H333WeVK1e28847z9atW2e//fabHXTQQY7Tqaeeaoce
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

------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://i.imgur.com/6cBlRWh.png

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
uyuvvNJt2bLFz3uE0Z577lnEBk/fnXfe6QVhx44d3TfffOMIma1cubJP24/gQ/ghrHLNw4v4eOWV
V3xpgfnz5ye937Vq1XL77LOP71do55xzjuvfv797/fXXkz4zt956a5Hge/bZZ91ll11WIZ6vaCd7
9OjhPeq5ltiprDdj5513do8//rj/rchEQAREQAREQAREoCIQSEn4IQbw+I0dO9YdddRROcOFGlwM
TJmzdumll+ZMuzLZENLq47HCTjvtNC9iCMUNDcHWrl0776VB3CGC1q5d6wfviTw3CKTHHnvMczz2
2GPd3Llz3bZt29wuu+ySye5s17kpJzB9+vSiY2hzp06dHBkaEb145lj3+++/J2z3+++/7z09PDN3
3HFHwusTIkoNu3HjxnnP4NSpU7erraXZmcyZq1atck2bNk3qjSzNuUt7zEUXXeTee++9gvL48Rsg
5Bfxf/rpp5cWjY4TAREQAREQAREQgbwikJLwO+WUU9wOO+zgunXr5nr37p0zHaScQ58+fVy/fv3c
LbfckjPtylRDGLBaEptBgwa5e++919+XODOBk6gtiEHmAR555JFeaJCq38516qmn+sE+c/1SmQtn
11i9erWvi4Y3hVDTaJipibN58+Z5IXrggQe6rl27OsRF3HzEaNsRuXhpELwIt5YtWxbNwfv666/9
fE9C+Ehgk8jwFOIxvfzyy72wK6shMqtXr16quYCbN292hJTOnDmzmLhCvOKFTYVJWdtf0vG8CHjt
tdfcxo0bS9o1b7YTFty5c2c3bdo0//zLREAEREAEREAERKAiEEhJ+CGsdt99d+85yiWBNWPGDO/9
IsyzIszDGj9+vOvevbsjIyHipiRhYEIOYYIgYrBLaCehsYh4vFlxRjgk3pDPP//cXwsjaQrho1Wr
Vv3PIXgGEaKcNzQ8agg0s549e7pXX331P8czP5P5iAjBZEaYK+K3du3a/9kNLyeePwTnBx98kPA0
X3zxhTvssMN8iDAho2YkgkFwJWNKSC19RQyxPwIZIXneeec57k2cCP/pp59ctWrV3K677lqsTTy7
eGND4/p4orhX8MgFIxQSTz+hv4VizPO84YYb/LMUhkEXSv/UDxEQAREQAREQARGII5CS8Lvwwgvd
QQcd5L0SuZTghbA/hAVhjRVB+JnH64EHHihRgFvhbW76X3/9VSQ8PvzwQ3f88cd7r9nbb78d+6sw
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

------MultipartBoundary--pethryT6y5fVBKBgmIGFOLgyqT99NRcKZGo3rTPC8v------
